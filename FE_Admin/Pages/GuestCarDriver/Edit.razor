@page "/edit_bill_cardriver/{id:int}"
@inject HttpClient httpClient
@inject IJSRuntime js
@inject NavigationManager Navigation
@inject IJSRuntime js
@inject ISnackbar Snackbar
<style>
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255); /* Màu trắng với độ mờ 50% */
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999; /* Đảm bảo overlay hiển thị trên các thành phần khác */
    }

</style>

@if (isLoading)
{
    <div class="loading-overlay">
        <MudItem xs="12" Class="text-center">
            <MudImage Src="/Image/404.jpg" Alt="NOT FOUND" Elevation="0" Fluid="true" />
        </MudItem>
    </div>
}



<MudContainer Class="mt-14 pa-0" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12">
            <MudPaper Elevation="0" Class="pa-3 mb-3" Style="@($"color:{Colors.Grey.Darken4}; background:{Colors.Grey.Lighten4};")">
                <MudBreadcrumbs Class="pa-0" Items="_items"></MudBreadcrumbs>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" Class="mx-auto">
            <MudPaper Elevation="0" Class="pa-3">
                <MudItem xs="12">
                    <MudPaper Elevation="4" Class="p-4">
                        <MudText Typo="Typo.h6" Class="mb-5">Thông tin hóa đơn đặt vé xe</MudText>
                        <MudForm @ref="form" Style="height:auto">
                            <MudGrid>
                                <MudItem xs="2" Class="mb-4">
                                    <MudTextField ShrinkLabel Label="Mã hóa đơn" T="string" @bind-Value="@bill.guest_car_code" ReadOnly="true" Variant="Variant.Outlined" />
                                </MudItem>

                                <MudItem xs="3" Class="mb-4">
                                    <MudSelect Variant="Variant.Outlined" T="int" @bind-Value="@bill.cus_id" Label="Khách hàng" ReadOnly="true">
                                        @foreach (var item in customer)
                                        {
                                            <MudSelectItem Value="@item.id">@item.name</MudSelectItem>
                                        }
                                    </MudSelect>
                                </MudItem>

                                <MudItem xs="3" Class="mb-4">
                                    <MudSelect Variant="Variant.Outlined" T="int" @bind-Value="@bill.car_id" Label="Xe" ReadOnly="true">
                                        @foreach (var item in car)
                                        {
                                            <MudSelectItem Value="item.id">@item.name</MudSelectItem>
                                        }
                                    </MudSelect>
                                </MudItem>
                                <MudItem xs="2" Class="mb-4">
                                    <MudTextField ShrinkLabel
                                                  Label="Tổng tiền"
                                                  @bind-Value="bill.price"
                                                  Variant="Variant.Outlined"
                                                  Required="true"
                                                  ReadOnly="true" />
                                </MudItem>

                                @if (bill.status == 1)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 2)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Ngày thanh toán"
                                                      T="DateTime?"
                                                      @bind-Value="bill.pay_date"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 6)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 8)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 9)
                                {
@*                                     <MudItem xs="2" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Hoàn tiền"
                                                      T="float"
                                                      @bind-Value="bill.return_money"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem> *@
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 10)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 11)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 12)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 13)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                else if (bill.status == 14)
                                {
                                    <MudItem xs="3" Class="mb-4">
                                        <MudTextField ShrinkLabel
                                                      Label="Trạng thái"
                                                      T="string"
                                                      @bind-Value="statusText"
                                                      Variant="Variant.Outlined"
                                                      ReadOnly="true" />
                                    </MudItem>
                                }
                                <MudItem xs="2" Class="mb-4">
                                    <MudSelect Variant="Variant.Outlined" T="bool" Label="Hình thức thanh toán" ReadOnly="true" @bind-Value="bill.payment_method">
                                        <MudSelectItem Value="true">Tiền mặt</MudSelectItem>
                                        <MudSelectItem Value="false">Chuyển khoản</MudSelectItem>
                                    </MudSelect>
                                </MudItem>

                                <MudItem xs="3" Class="mb-4">
                                    <MudSelect Variant="Variant.Outlined" T="int" @bind-Value="@bill.emp_id" Label="Người tạo" ReadOnly="true">
                                        @foreach (var item in emp)
                                        {
                                            <MudSelectItem Value="@item.id">@item.name</MudSelectItem>
                                        }
                                    </MudSelect>
                                </MudItem>
                            </MudGrid>

                            @if (bill.status == 1)
                            {
                                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.Save" Color="Color.Primary" OnClick="UpdateStatusBill2" Class="mt-3">Thanh toán</MudButton>
                                <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Save" Color="Color.Warning" OnClick="UpdateStatusBill6" Class="mt-3 ms-2">Hủy đơn</MudButton>
                            }
                            else if (bill.status == 8)
                            {
                                <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Save" Color="Color.Tertiary" OnClick="UpdateStatusBill9" Class="mt-3">Hoàn tiền</MudButton>
                            }
                            else if (bill.status == 10)
                            {
                                <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Autorenew" Color="Color.Tertiary" OnClick="UpdateStatusBill11" Class="mt-3">Giao xe</MudButton>
                                <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Tertiary" OnClick="UpdateStatusBill14" Class="mt-3 ms-2">Hủy</MudButton>
                            }
                            else if (bill.status == 11)
                            {
                                <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.CancelScheduleSend" Color="Color.Tertiary" OnClick="UpdateStatusBill12" Class="mt-3">Quá hạn</MudButton>
                                <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Save" Color="Color.Tertiary" OnClick="UpdateStatusBill13" Class="mt-3 ms-2">Thanh toán</MudButton>
                            }

                        </MudForm>
                    </MudPaper>
                </MudItem>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>
<script>
    // Lấy token từ localStorage
    function getAuthToken() {
        return localStorage.getItem("authToken");
    }

    window.triggerSelectClick = () => {
        const selectElements = document.querySelectorAll('.mud-select');

        selectElements.forEach(select => {
            select.click();
        });
    };

</script>

@code {
    [Parameter] public int Id { get; set; }
    private string statusText;
    private GuestCarDriver bill = new GuestCarDriver();
    private List<dropdown> customer = new List<dropdown>();
    private List<dropdown> emp = new List<dropdown>();
    private List<dropdown> car = new List<dropdown>();

    private MudForm form;
    private string LastSegment;

    private string url = "http://localhost:49922/api/GuestCarDriver";
    private string urlCustomer = "http://localhost:49922/api/Dropdown/customer";
    private string urlCar = "http://localhost:49922/api/Dropdown/car";
    private string urlEmp = "http://localhost:49922/api/Dropdown/emp";
    private string urlCarID = "http://localhost:49922/api/Cars/";
    private string urlStatus2 = "http://localhost:49922/api/GuestCarDriver/PutStatus2/";
    private string urlStatus6 = "http://localhost:49922/api/GuestCarDriver/PutStatus6/";
    private string urlStatus9 = "http://localhost:49922/api/GuestCarDriver/PutStatus9/";
    private string urlStatus11 = "http://localhost:49922/api/GuestCarDriver/PutStatus11/";
    private string urlStatus12 = "http://localhost:49922/api/GuestCarDriver/PutStatus12/";
    private string urlStatus13 = "http://localhost:49922/api/GuestCarDriver/PutStatus13/";
    private string urlStatus14 = "http://localhost:49922/api/GuestCarDriver/PutStatus14/";

    private int empId;
    private string userRole;
    private bool isInitialized = false;
    private bool isLoading = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized)
        {
            isInitialized = true;

            var token = await js.InvokeAsync<string>("localStorage.getItem", "authToken");

            if (!string.IsNullOrEmpty(token))
            {
                try
                {
                    var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();

                    if (handler.CanReadToken(token))
                    {
                        var jwtToken = handler.ReadJwtToken(token);

                        var roleClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role");

                        if (roleClaim != null)
                        {
                            userRole = roleClaim.Value;
                        }
                        else
                        {
                            Console.WriteLine("Role claim not found in the token.");
                        }
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Lỗi khi giải mã token: {ex.Message}");
                }
            }
            CheckRole();
            StateHasChanged();
            await js.InvokeVoidAsync("triggerSelectClick");

        }
    }

    private void CheckRole()
    {
        if (userRole == "1")
        {
            Console.WriteLine("User is an Admin.");
        }
        else if (userRole == "2")
        {
            Console.WriteLine("User is a regular User.");
        }
        else if (userRole == "3")
        {
            Console.WriteLine("User is a regular Driver.");
        }
        else
        {
            isLoading = true;
        }

    }

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Đặt vé", href: "/index", icon: @Icons.Material.Outlined.Payments),
        new BreadcrumbItem("Danh sách hóa đơn", href: "/index", icon: @Icons.Material.Outlined.List),
        new BreadcrumbItem("Chỉnh sửa hóa đơn", href: "/edit_guest_trip/{id:int}", icon: @Icons.Material.Filled.Edit),
    };

    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetFromJsonAsync<GuestCarDriver>(url + "/" + Id);
        bill = response;
        var uri = Navigation.Uri;
        LastSegment = GetLastSegment(uri);
        await LoadCustomer();
        await LoadEmp();
        await LoadCar();
        if (bill.status == 1)
        {
            statusText = "Tạo mới";
        }
        else if (bill.status == 2)
        {
            statusText = "Đã thanh toán";
        }
        // else if (bill.status == 6)
        // {
        //     statusText = "Đã hủy";
        // }
        else if (bill.status == 8)
        {
            statusText = "Khách hàng đề nghị hủy";
        }
        else if (bill.status == 9)
        {
            statusText = "Đã hoàn tiền";
        }
        else if (bill.status == 10)
        {
            statusText = "Đã cọc";
        }
        else if (bill.status == 11)
        {
            statusText = "Đã giao xe";
        }
        else if (bill.status == 12)
        {
            statusText = "Quá hạn";
        }
        else if (bill.status == 13)
        {
            statusText = "Đã thanh toán";
        }
        else if (bill.status == 14)
        {
            statusText = "Đã hủy";
        }
    }

    private string GetLastSegment(string url)
    {
        var segments = url.Split(new[] { '/' }, StringSplitOptions.RemoveEmptyEntries);
        return segments.Length > 0 ? segments.Last() : string.Empty;
    }

    private async Task LoadCustomer()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<List<dropdown>>($"{urlCustomer}");
            if (response != null)
            {
                customer = response;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add("Lỗi khi tải danh sách khách hàng", Severity.Error);
        }
    }

    private async Task LoadCar()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<List<dropdown>>($"{urlCar}");
            if (response != null)
            {
                car = response;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add("Lỗi khi tải danh sách xe", Severity.Error);
        }
    }

    private async Task LoadEmp()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<List<dropdown>>($"{urlEmp}");
            if (response != null)
            {
                emp = response;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add("Lỗi khi tải danh sách nhân viên", Severity.Error);
        }
    }

    private async Task UpdateStatusBill2()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync(urlStatus2 + Id, bill);
            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add($"Chỉnh sửa thành công", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Chỉnh sửa thất bại" + response, Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
    }

    private async Task UpdateStatusBill6()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync(urlStatus6 + Id, bill);
            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add($"Chỉnh sửa thành công", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Chỉnh sửa thất bại" + response, Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
    }

    private async Task UpdateStatusBill9()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync(urlStatus9 + Id, bill);
            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add($"Chỉnh sửa thành công", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Chỉnh sửa thất bại" + response, Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
    }
    private async Task UpdateStatusBill11()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync(urlStatus11 + Id, bill);
            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add($"Chỉnh sửa thành công", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Chỉnh sửa thất bại" + response, Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
    }
    private async Task UpdateStatusBill12()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync(urlStatus12 + Id, bill);
            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add($"Chỉnh sửa thành công", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Chỉnh sửa thất bại" + response, Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
    }
    private async Task UpdateStatusBill13()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync(urlStatus13 + Id, bill);
            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add($"Chỉnh sửa thành công", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Chỉnh sửa thất bại" + response, Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
    }
    private async Task UpdateStatusBill14()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync(urlStatus14 + Id, bill);
            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add($"Chỉnh sửa thành công", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Chỉnh sửa thất bại" + response, Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
    }

}
