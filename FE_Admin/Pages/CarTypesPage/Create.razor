@page "/addcartypes"
@inject HttpClient httpClient
@inject IJSRuntime js
@inject ISnackbar Snackbar

<MudContainer Class="mt-14 pa-0" MaxWidth="MaxWidth.False">
    @if (showSuccess)
    {
        <MudAlert Severity="Severity.Success" Variant="Variant.Filled" Style="position:fixed; top:60px; right:20px; z-index:9999;">
            Thêm thành công
        </MudAlert>
    }
    else if (showError)
    {
        <MudAlert Severity="Severity.Warning" Variant="Variant.Filled" Style="position:fixed; top:60px; right:20px; z-index:9999;">
            Thêm thất bại
        </MudAlert>
    }

    <MudGrid>
        <MudItem xs="12">
            <MudPaper Elevation="0" Class="pa-3 mb-3" Style="@($"color:{Colors.Grey.Darken4}; background:{Colors.Grey.Lighten4};")">
                <MudBreadcrumbs Class="pa-0" Items="_items"></MudBreadcrumbs>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" Class="mx-auto">
            <MudPaper Elevation="0" Class="pa-3">
                <MudItem xs="12">
                    <MudPaper Elevation="4" Class="p-4">
                        <MudText Typo="Typo.h6" Class="mb-5">Thêm Loại Xe</MudText>
                        <MudForm @ref="form" @bind-IsValid="isFormValid" Style="height:auto">

                            <MudTextField ShrinkLabel @bind-Value="CarTypes.name" Label="Tên loại xe"
                                          Validation="@(new Func<string, IEnumerable<string>>(CarTypesValidate))"
                                          Placeholder="Tên loại xe" Variant="Variant.Outlined" Required="true" />

                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.Save" Color="Color.Primary" Disabled="@isLoading" OnClick="AddCarTypes" Class="mt-3">Lưu</MudButton>
                        </MudForm>
                    </MudPaper>
                    <MudItem xs="12" Class="d-flex justify-center mt-4">
                        @if (isLoading)
                        {
                            <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
                        }
                    </MudItem>
                </MudItem>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private car_types CarTypes = new car_types();
    private bool isLoading = false;
    private bool isFormValid = false;
    private bool showSuccess = false;
    private bool showError = false;
    private MudForm form;
    private string url = "http://localhost:49922/api/CarTypes";

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Loại Xe", href: "/getcartypes", icon: @Icons.Material.Outlined.DirectionsCar),
        new BreadcrumbItem("Danh Sách Loại Xe", href: "/getcartypes", icon: @Icons.Material.Outlined.List),
        new BreadcrumbItem("Thêm Mới Loại Xe", href: "/addcartypes", icon: @Icons.Material.Filled.AddCircleOutline),
    };

    private IEnumerable<string> CarTypesValidate(string name)
    {

        if (string.IsNullOrWhiteSpace(name))
        {
            yield return " Tên loại xe không được để trống";
        }
        else if (name.Length < 2)
        {
            yield return "Tên loại xe không hợp lệ";
        }
        else if (name.Any(ch => !char.IsLetter(ch) && !char.IsWhiteSpace(ch)))
        {
            yield return "Tên loại xe không được chứa ký tự đặc biệt.";
        }
    }

    private async Task AddCarTypes()
    {
        isLoading = true;
        try
        {
            await Task.Delay(2000);
            if (form.IsValid)
            {
                var response = await httpClient.PostAsJsonAsync(url, CarTypes);
                if (response.IsSuccessStatusCode)
                {
                    CarTypes.name = null;

                    Snackbar.Add($"Thêm thành công", Severity.Success);
                }
                else
                {
                    Snackbar.Add($"Thêm thất bại", Severity.Warning);
                }
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Thêm thất bại", Severity.Warning);
        }
        finally
        {
            isLoading = false;
        }
    }
}
