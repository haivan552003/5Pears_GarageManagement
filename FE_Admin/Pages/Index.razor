@page "/index"
@using FE_Admin.Data
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject IJSRuntime js
@inject NavigationManager NavigationManager

<style>
    .loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255); /* Màu trắng với độ mờ 50% */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999; /* Đảm bảo overlay hiển thị trên các thành phần khác */
    }

</style>

@if (isLoading)
{
    <div class="loading-overlay">
        <MudItem xs="12" Class="text-center">
            <MudImage Src="https://th.bing.com/th/id/OIP.Qwd4_34iq4TaIKIZ7y_uVAAAAA?rs=1&pid=ImgDetMain" Alt="NOT FOUND" Elevation="0" Fluid="true" />
        </MudItem>
    </div>
}

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudGrid>
        <MudItem xs="4">

            <MudCard>
                <MudCardMedia Image="https://th.bing.com/th/id/R.f7be4eedf292d3bab905a5a1656e2fe9?rik=ZETwh%2faJudg0TA&pid=ImgRaw&r=0" Height="250" />
                <MudCardContent>
                    <MudText Typo="Typo.subtitle2" Class=" fw-bold text-center">TUYẾN XE</MudText>
                </MudCardContent>
            </MudCard>

        </MudItem>
        <MudItem xs="4">

            <MudCard>
                <MudCardMedia Image="https://th.bing.com/th/id/OIP.sc9mvO-miU9EAO60sOJIQgHaE7?rs=1&pid=ImgDetMain" Height="250" />
                <MudCardContent>
                    <MudText Typo="Typo.subtitle2" Class=" fw-bold text-center">XE</MudText>
                </MudCardContent>
            </MudCard>

        </MudItem>
        <MudItem xs="4">

            <MudCard>
                <MudCardMedia Image="https://th.bing.com/th/id/OIP.prqU3vHWYm2fOQHjj1GlTwHaFO?rs=1&pid=ImgDetMain" Height="250" />
                <MudCardContent>
                    <MudText Typo="Typo.subtitle2" Class=" fw-bold text-center">NHÂN VIÊN</MudText>
                </MudCardContent>
            </MudCard>

        </MudItem>
        <MudItem xs="4">

            <MudCard>
                <MudCardMedia Image="https://th.bing.com/th/id/OIP.05pqdFP-RHBKqVXCBZidzQHaE8?rs=1&pid=ImgDetMain" Height="250" />
                <MudCardContent>
                    <MudText Typo="Typo.subtitle2" Class=" fw-bold text-center">TÀI XẾ</MudText>
                </MudCardContent>
            </MudCard>

        </MudItem>
        <MudItem xs="4">

            <MudCard>
                <MudCardMedia Image="https://th.bing.com/th/id/R.aa01b55dd7311e4b789a3f05a80988ea?rik=yQat5WYkbcrrug&pid=ImgRaw&r=0" Height="250" />
                <MudCardContent>
                    <MudText Typo="Typo.subtitle2" Class=" fw-bold text-center">KHÁCH HÀNG</MudText>
                </MudCardContent>
            </MudCard>

        </MudItem>
        <MudItem xs="4">

            <MudCard>
                <MudCardMedia Image="https://th.bing.com/th/id/OIP.ChW3VAOH2nLYjNPbs8KEXQHaE8?rs=1&pid=ImgDetMain" Height="250" />
                <MudCardContent>
                    <MudText Typo="Typo.subtitle2" Class=" fw-bold text-center">DỊCH VỤ</MudText>
                </MudCardContent>
            </MudCard>

        </MudItem>
    </MudGrid>
</MudContainer>

<script>
    // Lấy token từ localStorage
    function getAuthToken() {
    return localStorage.getItem("authToken");
    }
</script>

@code {
    private string userRole;
    private bool isInitialized = false;
    private bool isLoading = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized)
        {
            isInitialized = true;

            var token = await js.InvokeAsync<string>("localStorage.getItem", "authToken");

            if (!string.IsNullOrEmpty(token))
            {
                try
                {
                    var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();

                    if (handler.CanReadToken(token))
                    {
                        var jwtToken = handler.ReadJwtToken(token);

                        var roleClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role");

                        if (roleClaim != null)
                        {
                            userRole = roleClaim.Value;
                        }
                        else
                        {
                            Console.WriteLine("Role claim not found in the token.");
                        }
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Lỗi khi giải mã token: {ex.Message}");
                }
            }
            CheckRole();
            StateHasChanged();
        }
    }

    private void CheckRole()
    {
        if (userRole == "1")
        {
            Console.WriteLine("User is an Admin.");
        }
        else if (userRole == "2")
        {
            Console.WriteLine("User is a regular User.");
        }
        else if (userRole == "3")
        {
            Console.WriteLine("User is a regular Driver.");
        }
        else
        {
            isLoading = true;
        }
    }
}