@page "/car-details/{carNumber}"
@inject HttpClient Http
@using System.Net.Http.Json
@using Newtonsoft.Json
@using MudBlazor

@if (car == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <MudGrid Class="pa-0">
            <MudItem xs="12">
                <MudPaper Elevation="4" Class="p-4">
                    <MudText Typo="Typo.h6" Class="mb-5">Thông tin xe</MudText>
                    <MudDataGrid Class="mx-auto pa-2" T="Car" Dense="true" Hover="true" Bordered="true" Striped="true"
                                 Items="@(new List<Car> { car })" Filterable="false" Hideable="true">
                        <Columns>
                            <PropertyColumn T="Car" TProperty="string" Property="x => x.car_number" Title="Biển số xe" Width="150px" Class="fw-bold" />
                            <PropertyColumn T="Car" TProperty="int" Property="x => x.brand_id" Title="Hãng xe" Width="150px" Class="fw-bold" />
                            <PropertyColumn T="Car" TProperty="int" Property="x => x.type_id" Title="Loại xe" Width="150px" Class="fw-bold" />
                            <PropertyColumn T="Car" TProperty="DateTime" Property="x => x.vehicle_registration_start"
                                            Title="Ngày đăng kiểm" Width="200px" Class="fw-bold" />
                            <PropertyColumn T="Car" TProperty="DateTime" Property="x => x.vehicle_registration_end"
                                            Title="Hạn đăng kiểm" Width="200px" Class="fw-bold" />
                            <PropertyColumn T="Car" TProperty="float" Property="x => x.price" Title="Giá" Width="150px" Class="fw-bold" />
                        </Columns>
                    </MudDataGrid>
                </MudPaper>
            </MudItem>
        </MudGrid>


        <MudGrid Class="pa-0">
            <MudItem xs="12">
                <MudPaper Elevation="4" Class="p-4">
                    <MudText Typo="Typo.h6" Class="mb-5">Chi tiết chuyến đi</MudText>
                    <MudDataGrid Class="mx-auto pa-2" T="TripDetail" Dense="true" Hover="true" Bordered="true" Striped="true"
                                 Items="@car.trip_Details" Filterable="false" Hideable="true">
                        <Columns>
                            <PropertyColumn T="TripDetail" TProperty="string" Property="x => x.location_from_id" Class="fw-bold"
                                            Title="Điểm Đi" Width="150px" />
                            <PropertyColumn T="TripDetail" TProperty="string" Property="x => x.location_to_id" Class="fw-bold"
                                            Title="Điểm Đến" Width="200px" />
                            <PropertyColumn T="TripDetail" TProperty="DateTime" Property="x => x.time_start" Class="fw-bold"
                                            Title="Bắt Đầu" Width="150px" />
                            <PropertyColumn T="TripDetail" TProperty="DateTime" Property="x => x.time_end" Class="fw-bold" Title="Kết Thúc"
                                            Width="150px" />
                            <TemplateColumn T="TripDetail" Class="fw-bold" Title="Trạng Thái" Width="150px">
                                <CellTemplate Context="element">
                                    @if (element.Item.status)
                                    {
                                        <MudChip Color="Color.Success" Size="Size.Small" Variant="Variant.Text">Đang hoạt động</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip Color="Color.Error" Size="Size.Small" Variant="Variant.Text">Ngưng hoạt động</MudChip>
                                    }
                                </CellTemplate>
                            </TemplateColumn>
                        </Columns>
                    </MudDataGrid>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </div>
}

@code {
    [Parameter] public string CarNumber { get; set; }
    private Car car;
    private string _quickFilter;
    private string _searchString;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync($"http://localhost:49922/api/Cars/CarNumber/{CarNumber}");
            if (response.IsSuccessStatusCode)
            {
                var responseData = await response.Content.ReadAsStringAsync();
                car = JsonConvert.DeserializeObject<Car>(responseData);
                if (car == null || car.trip_Details == null || !car.trip_Details.Any())
                {
                    Console.WriteLine("Không có dữ liệu chuyến đi");
                }
            }
            else
            {
                car = null;
                Console.WriteLine("Lỗi khi lấy dữ liệu");
            }
        }
        catch (Exception ex)
        {
            car = null;
            Console.WriteLine($"Lỗi: {ex.Message}");
        }
    }

    public class Car
    {
        public int id { get; set; }
        public string car_name { get; set; }
        public string car_code { get; set; }
        public string car_number { get; set; }
        public string color { get; set; }
        public DateTime vehicle_registration_start { get; set; }
        public DateTime vehicle_registration_end { get; set; }
        public string status { get; set; }
        public byte isAuto { get; set; }
        public byte isRetail { get; set; }
        public float price { get; set; }
        public int type_id { get; set; }
        public int brand_id { get; set; }
        public string location_car { get; set; }
        public DateTime year_production { get; set; }
        public float odo { get; set; }
        public float insurance_fee { get; set; }
        public int fuel { get; set; }
        public string description { get; set; }
        public List<TripDetail> trip_Details { get; set; }
    }

    public class TripDetail
    {
        public int trip_detail_id { get; set; }
        public string trip_detail_code { get; set; }
        public string location_from_id { get; set; }
        public string location_to_id { get; set; }
        // public string car_code { get; set; }
        public DateTime time_start { get; set; }
        public DateTime time_end { get; set; }
        public bool status { get; set; }
    }
}
