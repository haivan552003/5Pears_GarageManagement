@page "/calendarCar/{CarId:int}"
@using System.Net.Http
@using System.Text.Json
@using ModelCustom
@inject HttpClient HttpClient
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudContainer>
    <MudPaper Elevation="3" Class="pa-4">
        <MudText Typo="Typo.h5" Class="mb-4">Lịch Xe @CarId</MudText>

        @if (isLoading)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
        }
        else
        {
            @if (isServiceCar)
            {
                @if (serviceCarCalendars != null && serviceCarCalendars.Any(x => x.date.HasValue))
                {
                    <MudTable Items="@serviceCarCalendars.Where(x => x.date.HasValue)"
                              Hover="true"
                              Breakpoint="Breakpoint.Sm"
                              Dense="true"
                              Bordered="true">
                        <HeaderContent>
                            <MudTh>Ngày</MudTh>
                            <MudTh>Giờ Bắt Đầu</MudTh>
                            <MudTh>Giờ Kết Thúc</MudTh>
                            <MudTh>Tên Tài Xế</MudTh>
                            <MudTh>Số Điện Thoại</MudTh>
                            <MudTh>Email</MudTh>
                            <MudTh>Mã Lái Xe</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>@context.date?.ToString("dd/MM/yyyy")</MudTd>
                            <MudTd>@context.date_start?.ToString("HH:mm")</MudTd>
                            <MudTd>@context.date_end?.ToString("HH:mm")</MudTd>
                            <MudTd>@context.name_drivers</MudTd>
                            <MudTd>@context.sdt_driver</MudTd>
                            <MudTd>@context.email_driver</MudTd>
                            <MudTd>@context.code_driver</MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                }
                else
                {
                    <MudAlert Severity="Severity.Info" Class="mt-4">
                        Không có lịch cho xe dịch vụ này
                    </MudAlert>
                }
            }
            else
            {
                <MudTabs Elevation="2" Rounded="true" Centered="true" Color="@Color.Primary">
                    <MudTabPanel Text="Thuê Xe">
                        @if (guestCarCalendars != null && guestCarCalendars.Any(x => x.date.HasValue))
                        {
                            <MudTable Items="@guestCarCalendars.Where(x => x.date.HasValue)"
                                      Hover="true"
                                      Breakpoint="Breakpoint.Sm"
                                      Dense="true"
                                      Bordered="true">
                                <HeaderContent>
                                    <MudTh>Ngày</MudTh>
                                    <MudTh>Ngày Bắt Đầu</MudTh>
                                    <MudTh>Ngày Kết Thúc</MudTh>
                                    <MudTh>Tên Khách Hàng</MudTh>
                                    <MudTh>Số Điện Thoại</MudTh>
                                    <MudTh>Email</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd>@context.date?.ToString("dd/MM/yyyy")</MudTd>
                                    <MudTd>@context.date_start?.ToString("dd/MM/yyyy")</MudTd>
                                    <MudTd>@context.date_end?.ToString("dd/MM/yyyy")</MudTd>
                                    <MudTd>@context.name_cus</MudTd>
                                    <MudTd>@context.phone</MudTd>
                                    <MudTd>@context.email</MudTd>
                                </RowTemplate>
                                <PagerContent>
                                    <MudTablePager />
                                </PagerContent>
                            </MudTable>
                        }
                        else
                        {
                            <MudAlert Severity="Severity.Info" Class="mt-4">
                                Không có lịch thuê xe
                            </MudAlert>
                        }
                    </MudTabPanel>

                    <MudTabPanel Text="Thuê Xe Có Tài Xế">
                        @if (guestCarDriverCalendars != null && guestCarDriverCalendars.Any(x => x.date.HasValue))
                        {
                            <MudTable Items="@guestCarDriverCalendars.Where(x => x.date.HasValue)"
                                      Hover="true"
                                      Breakpoint="Breakpoint.Sm"
                                      Dense="true"
                                      Bordered="true">
                                <HeaderContent>
                                    <MudTh>Ngày</MudTh>
                                    <MudTh>Ngày Bắt Đầu</MudTh>
                                    <MudTh>Ngày Kết Thúc</MudTh>
                                    <MudTh>Tên Khách Hàng</MudTh>
                                    <MudTh>Tên Tài Xế</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd>@context.date?.ToString("dd/MM/yyyy")</MudTd>
                                    <MudTd>@context.date_start?.ToString("dd/MM/yyyy")</MudTd>
                                    <MudTd>@context.date_end?.ToString("dd/MM/yyyy")</MudTd>
                                    <MudTd>@context.name_cus</MudTd>
                                    <MudTd>@context.name_drivers</MudTd>
                                </RowTemplate>
                                <PagerContent>
                                    <MudTablePager />
                                </PagerContent>
                            </MudTable>
                        }
                        else
                        {
                            <MudAlert Severity="Severity.Info" Class="mt-4">
                                Không có lịch thuê xe và tài xế
                            </MudAlert>
                        }
                    </MudTabPanel>
                </MudTabs>
            }
        }

        <div class="mt-4 d-flex justify-center">
            <MudButton Variant="Variant.Outlined"
                       Color="Color.Primary"
                       OnClick="@(() => NavigationManager.NavigateTo("/getcars"))">
                Quay Lại Danh Sách Xe
            </MudButton>
        </div>
    </MudPaper>
    <MudGrid>
        <MudItem xs="8">
            <div class="pb-5">
                @* @if (cars.car_img != null && cars.car_img.Any())
                {
                    <img src="@cars.car_img.First().name" Alt="Hình chiếc xe" class="img-fluid w-100 mx-auto rounded-3" Style="width:810px; height:600px;" />
                } *@
            </div>
            <MudGrid Class="mb-4">
                <MudItem xs="12">
                    <MudText Typo="Typo.h4"><b>@cars.car_name</b></MudText>
                </MudItem>

                <MudItem xs="1" Class="d-flex align-center">
                    <MudIcon Icon="@Icons.Material.Filled.Star" Color="Color.Warning" />
                    <MudText Typo="Typo.body1" Class="ml-1">4.5</MudText>
                </MudItem>

                <MudItem xs="1" Class="d-flex align-center">
                    <MudIcon Icon="@Icons.Material.Filled.BarChart" Color="Color.Success" />
                    <MudText Typo="Typo.body1" Class="ml-1">20</MudText>
                </MudItem>
            </MudGrid>

            <MudDivider Class="mt-6 mb-6" />

            <MudGrid Class="mb-4">
                <MudItem xs="12">
                    <MudText Typo="Typo.h5" Class="fw-bold">Đặc Điểm</MudText>
                </MudItem>
                <MudItem xs="4">
                    <MudText Class="mb-1" Typo="Typo.subtitle1">Loại hộp số</MudText>
                    @if (@cars.isAuto == 0)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Số Tự Động</MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Số Sàn</MudText>
                    }
                </MudItem>

                <MudItem xs="4">
                    <MudText Class="mb-1" Typo="Typo.subtitle1">Số Ghế</MudText>
                    <MudText Typo="Typo.subtitle1" Class=" fw-bold">@cars.number_seat ghế</MudText>
                </MudItem>

                <MudItem xs="4">
                    <MudText Class="mb-1" Typo="Typo.subtitle1">Nhiên Liệu</MudText>
                    @if (cars.fuel == 1)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Xăng RON 92 (E5)</MudText>
                    }
                    else if (cars.fuel == 2)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">RON 95-III</MudText>
                    }
                    else if (cars.fuel == 3)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">RON 95-IV</MudText>
                    }
                    else if (cars.fuel == 4)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Diesel 0,05%5</MudText>
                    }
                    else if (cars.fuel == 5)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Diesel 0,001%S (Diesel Euro 5)</MudText>
                    }
                    else if (cars.fuel == 6)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Pin Lithium-ion (Li-ion)</MudText>
                    }
                    else if (cars.fuel == 7)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Pin Lithium Iron Phosphate (LFP)</MudText>
                    }
                    else if (cars.fuel == 8)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Pin thể rắn (Solid-State Battery)</MudText>
                    }
                    else if (cars.fuel == 9)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Hybrid truyền thống (HEV)</MudText>
                    }
                    else if (cars.fuel == 10)
                    {
                        <MudText Typo="Typo.subtitle1" Class=" fw-bold">Plug-in Hybrid (PHEV)</MudText>
                    }
                </MudItem>
            </MudGrid>

            <MudDivider Class="mt-6 mb-6" />

            <MudGrid Class="mb-4">
                <MudItem xs="12">
                    <MudText Typo="Typo.h5" Class="fw-bold">Mô Tả</MudText>
                </MudItem>

                <MudItem xs="12">
                    <MudText Typo="Typo.subtitle1">
                        @cars.car_name
                    </MudText>
                    <MudText Typo="Typo.subtitle1">
                        @cars.description
                    </MudText>
                </MudItem>
            </MudGrid>

            <MudDivider Class="mt-6 mb-6" />

            <MudGrid Class="mb-4">
                <MudItem xs="12">
                    <MudText Typo="Typo.h5" Class="fw-bold">
                        Các Tiện Nghi Khác
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.Map" />
                        Bản đồ
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.Bluetooth" />
                        Bluetooth
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.Camera" />
                        Camera hành trình
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.Camera" />
                        Camera lùi
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.EdgesensorHigh" />
                        Cảm biến va chạm
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.CarCrash" />
                        Cảnh báo tốc độ
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.GpsFixed" />
                        Định vị GPS
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.Usb" />
                        Khe cắm USB
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.TireRepair" />
                        Lốp dự phòng
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.SmartDisplay" />
                        Màn hình DVD
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.Assignment" />
                        ETC
                    </MudText>
                </MudItem>
                <MudItem xs="3">
                    <MudText Typo="Typo.subtitle1">
                        <MudIcon Icon="@Icons.Material.Outlined.HealthAndSafety" />
                        Túi khí an toàn
                    </MudText>
                </MudItem>

            </MudGrid>

            <MudDivider Class="mt-6 mb-6" />

            <MudGrid Class="mb-4">
                <MudItem xs="12">
                    <MudText Typo="Typo.h5" Class="fw-bold">Giấy Tờ Thuê Xe</MudText>
                </MudItem>
                <MudPaper Elevation="0" Class="pa-4 border-l-4 border-solid mud-border-warning w-100" Style="@($"background:{Colors.Amber.Lighten5};")">
                    <MudGrid>
                        <MudItem xs="12" Class="d-flex align-center">
                            <img loading="lazy" src="https://n1-cstg.mioto.vn/v4/p/m/icons/papers/gplx_cccd.png" alt="" style="width:32px; height:32px;">
                            <MudText Typo="Typo.subtitle1" Class="ml-2">GPLX (đối chiếu) & CCCD (đối chiếu VNEID)</MudText>
                        </MudItem>
                        <MudItem xs="12" Class="d-flex align-center">
                            <img loading="lazy" src="https://n1-cstg.mioto.vn/v4/p/m/icons/papers/gplx_passport.png" alt="" style="width:32px; height:32px;">
                            <MudText Typo="Typo.subtitle1" Class="ml-2">GPLX (đối chiếu) & Passport (giữ lại)</MudText>
                        </MudItem>
                    </MudGrid>
                </MudPaper>

            </MudGrid>

            <MudDivider Class="mt-6 mb-6" />

            <MudGrid Class="mb-4">
                <MudItem xs="12">
                    <MudText Typo="Typo.h5" Class="fw-bold">Tài Sản Thế Chấp</MudText>
                </MudItem>
                <MudPaper Elevation="0" Class="pa-4 border-l-4 border-solid mud-border-warning w-100" Style="@($"background:{Colors.Amber.Lighten5};")">
                    <MudGrid>
                        <MudItem xs="12" Class="d-flex align-center">
                            <MudText Typo="Typo.subtitle1">Không yêu cầu khách thuê thế chấp Tiền mặt hoặc Xe máy</MudText>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            </MudGrid>

            <MudDivider Class="mt-6 mb-6" />

            <MudGrid Class="mb-4">
                <MudTable Hover="false" Bordered="true" Elevation="0" Items="elements">
                    <HeaderContent>
                        <MudTh>Thời điểm hủy chuyến</MudTh>
                        <MudTh>Phí hủy chuyến</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Nr">Trong vòng 1h sau giữ chỗ</MudTd>
                        <MudTd DataLabel="Sign">Trước chuyến đi >7 ngày</MudTd>
                        <MudTd DataLabel="Name">Trong vòng 7 ngày trước chuyến đi</MudTd>
                    </RowTemplate>
                </MudTable>
            </MudGrid>
        </MudItem>

        <MudItem xs="4">
            <div class="pb-5">
                @if (latestImages != null && latestImages.Any())
                {
                    @foreach (var image in latestImages)
                    {
                        <img src="@image.name" class="rounded-3 pb-3 w-100" Alt="Hình chiếc xe 2" />
                    }
                }
                else
                {
                    <p>No images available.</p>
                }
            </div>
            <MudPaper Class="p-4" MaxWidth="MaxWidth.Medium" Elevation="1">
                <MudGrid>
                    <MudItem xs="7" Class="pb-0 pt-0">
                        <MudText Typo="Typo.h6" Class="fw-bold" Color="Color.Primary">
                            @car_price.ToString("#,##0") VNĐ/ngày
                        </MudText>
                    </MudItem>
                    <MudItem xs="5" Class="pb-0 pt-0">
                        <MudText Class="text-decoration-line-through fs-14 pt-2">@cars.price.ToString("#,##0") VNĐ/ngày</MudText>
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle1">
                            Thời gian thuê
                        </MudText>
                        <MudDateRangePicker Variant="Variant.Outlined" @bind-DateRange="_dateRange" MinDate="DateTime.Today" />
                    </MudItem>

                    <MudItem xs="6" Class="pb-2 pt-2">
                        <MudText Typo="Typo.subtitle1">Bảo hiểm thuê xe</MudText>
                    </MudItem>
                    <MudItem xs="6" Class="pb-2 pt-2">
                        <MudText Align="Align.End" Typo="Typo.subtitle1">@cars.insurance_fee.ToString("#,##0") VNĐ</MudText>
                    </MudItem>

                    <MudItem xs="6" Class="pb-2 pt-2">
                        <MudText Typo="Typo.subtitle1">Thành Tiền</MudText>
                    </MudItem>
                    <MudItem xs="6" Class="pb-2 pt-2">

                        @if (_dateRange?.Start != null && _dateRange?.End != null)
                        {
                            date_number = (_dateRange.End.Value - _dateRange.Start.Value).Days;
                            money = (date_number * car_price) - cars.insurance_fee;
                            <MudText Align="Align.End" Typo="Typo.subtitle1">@money.ToString("#,##0") VNĐ</MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Error">
                                Vui lòng chọn khoảng thời gian thuê
                            </MudText>
                        }


                    </MudItem>

                    @if (cus_id != 0)
                    {
                        <MudItem xs="12">
                            <MudButton OnClick="CheckDateRetailCar" FullWidth="true" Variant="Variant.Filled" Color="Color.Primary">thuê xe</MudButton>
                            @if (_showMessage)
                            {
                                <MudText Typo="Typo.subtitle1" Align="Align.Center" Color="Color.Error">@message</MudText>
                            }
                        </MudItem>
                    }
                    else
                    {
                        <MudItem xs="12">
                            <MudText Align="Align.Center" Typo="Typo.subtitle1" Color="Color.Error">Vui lòng đăng nhập để thanh toán</MudText>
                        </MudItem>
                    }
                </MudGrid>
            </MudPaper>

            @if (cus_id != 0)
            {
                <MudPaper Class="p-4 mt-4" Elevation="1">
                    <MudGrid>
                        <MudItem xs="12">
                            <MudText Typo="Typo.h6" Color="Color.Primary">THÔNG TIN KHÁCH HÀNG</MudText>
                        </MudItem>

                        <MudItem xs="4" Class="mb-3">
                            <MudText Align="Align.Left" Typo="Typo.subtitle1">
                                Khách hàng
                            </MudText>
                            <MudText Align="Align.Left" Typo="Typo.subtitle1">
                                Email
                            </MudText>
                            <MudText Align="Align.Left" Typo="Typo.subtitle1">
                                Điện thoại
                            </MudText>
                        </MudItem>

                        <MudItem xs="8" Class="mb-3">
                            <MudText Align="Align.Right" Class="fw-bold" Typo="Typo.subtitle1">
                                @customer.fullname
                            </MudText>
                            <MudText Align="Align.Right" Class="fw-bold" Typo="Typo.subtitle1">
                                @customer.email
                            </MudText>
                            <MudText Align="Align.Right" Class="fw-bold" Typo="Typo.subtitle1">
                                @customer.phone_number
                            </MudText>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            }
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public int CarId { get; set; }

    private bool isServiceCar = false;
    private bool isLoading = true;
    private int cus_id;
    private List<carlendarCar> serviceCarCalendars;
    private List<carlendarCar> guestCarCalendars;
    private List<carlendarCar> guestCarDriverCalendars;
    private List<car_img> latestImages;
    private bool loading = false;
    private bool? isCarRented;
    private bool _showMessage = false;
    private string message;
    private int date_number;
    private customer customer = new customer();
    private car cars = new car();
    private float money;
    private DateRange? _dateRange;
    private float car_price;
    private guest_car_create bill = new guest_car_create();

    private string urlCheckDateRetailCar = "http://localhost:49922/api/GuestCars/CheckDateRetailCar";
    private string urlBill = "http://localhost:49922/api/GuestCars";
    private string urlTopGuestCar = "http://localhost:49922/api/GuestCars/GetTop";
    private string url = "http://localhost:49922/api/Cars/viewCar/";
    private string urlCus = "http://localhost:49922/api/Customer";



    private List<guest_car_create> elements = new List<guest_car_create>();

    protected override async Task OnInitializedAsync()
    {
        await FetchCarCalendar();
      
    }
    private async Task LoadUser()
    {
        customer = await HttpClient.GetFromJsonAsync<customer>($"{urlCus}/{19}");
    }
   

    private async Task FetchCarCalendar()
    {
        try
        {
            isLoading = true;

            // Fetch car information
            var carResponse = await HttpClient.GetAsync($"http://localhost:49922/api/Cars/viewCar/{CarId}");
            if (carResponse.IsSuccessStatusCode)
            {
                cars = await carResponse.Content.ReadFromJsonAsync<car>();
                if (cars == null)
                {
                    Snackbar.Add("Không tìm thấy thông tin xe", Severity.Error);
                    return;
                }

                latestImages = cars.car_img?.OrderByDescending(img => img.id).Take(3).ToList() ?? new List<car_img>();
                car_price = cars.price - cars.voucher;
            }
            else
            {
                Snackbar.Add("Không thể tải thông tin xe", Severity.Error);
            }

            if (cars == null)
            {
                Snackbar.Add("Không thể xác định loại xe", Severity.Error);
                return;
            }

            isServiceCar = cars.is_retail == 0;

            // Gọi API tương ứng với loại xe
            if (isServiceCar)
            {
                var response = await HttpClient.GetAsync($"http://localhost:49922/api/CalendarCars?id_car={CarId}");
                if (response.IsSuccessStatusCode)
                {
                    serviceCarCalendars = await response.Content.ReadFromJsonAsync<List<carlendarCar>>();

                    if (serviceCarCalendars == null || !serviceCarCalendars.Any(x => x.date.HasValue))
                    {
                        Snackbar.Add("Không có lịch cho xe này", Severity.Info);
                    }
                }
                else
                {
                    Snackbar.Add("Lỗi khi tải lịch xe dịch vụ", Severity.Error);
                }
            }
            else
            {
                // Gọi API cho khách thuê xe
                var guestCarResponse = await HttpClient.GetAsync($"http://localhost:49922/api/CalendarCars/calendar_gc?id_car={CarId}");
                if (guestCarResponse.IsSuccessStatusCode)
                {
                    guestCarCalendars = await guestCarResponse.Content.ReadFromJsonAsync<List<carlendarCar>>();
                }

                // Gọi API cho khách thuê xe có lái
                var guestCarDriverResponse = await HttpClient.GetAsync($"http://localhost:49922/api/CalendarCars/calendar_gcd?id_car={CarId}");
                if (guestCarDriverResponse.IsSuccessStatusCode)
                {
                    guestCarDriverCalendars = await guestCarDriverResponse.Content.ReadFromJsonAsync<List<carlendarCar>>();
                }
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Không thể kết nối đến máy chủ: {ex.Message}", Severity.Error);
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task CheckDateRetailCar()
    {
        if (customer == null)
        {
            Snackbar.Add("Thông tin khách hàng không tồn tại", Severity.Error);
            return;
        }
        if (customer.driver_license_img1 == null)
        {
            Snackbar.Add("Cần phải có ảnh giấy phép lái xe", Severity.Error);
            NavigationManager.NavigateTo("/profile");
        }
        else
        {
            try
            {
                if (_dateRange == null || CarId == 0 || !_dateRange.Start.HasValue)
                {
                    _showMessage = true;
                    message = "Quý khách vui lòng chọn ngày thuê";
                    return;
                }

                var request = new CarRentalRequest
                    {
                        DateStart = _dateRange.Start.Value,
                        CarId = CarId
                    };

                var response = await HttpClient.PostAsJsonAsync(urlCheckDateRetailCar, request);

                if (response.IsSuccessStatusCode)
                {
                    var isRented = await response.Content.ReadFromJsonAsync<bool>();

                    if (isRented)
                    {
                        message = "Xe đã có khách thuê vào ngày này!";
                        _showMessage = true;
                    }
                    else
                    {
                        bill.date_start = _dateRange.Start.Value;
                        bill.date_end = _dateRange.End.Value;

                        date_number = (bill.date_end.Value - bill.date_start.Value).Days;

                        bill.price = (cars.price * date_number) + cars.insurance_fee;

                        AddBill();
                    }
                }
                else
                {
                    message = "Lỗi kiểm tra tình trạng xe!";
                }
            }
            catch (Exception ex)
            {
                message = $"Đã có lỗi xảy ra: {ex.Message}";
            }
        }
    }

    private async Task AddBill()
    {
        try
        {
            bill.emp_id = 5;
            bill.date_start = _dateRange.Start.Value;
            bill.date_end = _dateRange.End.Value;
            bill.car_id = CarId;
            bill.cus_id = cus_id;
            // bill.price
            var response = await HttpClient.PostAsJsonAsync(urlBill, bill);
            if (response.IsSuccessStatusCode)
            {
                // Console.WriteLine("Thêm thành công", Severity.Success);

                var responseTop = await HttpClient.GetAsync(urlTopGuestCar);
                var jsonResponse = await responseTop.Content.ReadAsStringAsync();
                var guestTrips = JsonSerializer.Deserialize<List<guest_car>>(jsonResponse);
                var guestTripId = guestTrips.First().id;
                NavigationManager.NavigateTo($"/checkoutcar/{guestTripId}");
            }
            else
            {
                Console.WriteLine("Thêm thất bại", Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi: {ex.Message}", Severity.Error);
        }
    }

}