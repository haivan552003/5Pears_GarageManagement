@page "/checkoutdriver/{billId:int}"
@inject HttpClient httpClient
@inject IJSRuntime js
@inject NavigationManager Navigation


<MudContainer Class="mt-8 mb-5" MaxWidth="MaxWidth.Medium">
    <MudPaper Class="p-4" Elevation="0">
        @if (responseCode == "00")
        {
            <MudText Typo="Typo.h5" Align="Align.Center" Color="Color.Primary">
                CỌC THÀNH CÔNG, QUÍ KHÁCH VUI LÒNG THANH TOÁN SAU CHUYẾN ĐI
            </MudText>
        }
        else
        {
            <MudText Typo="Typo.h5" Align="Align.Center" Color="Color.Primary">
                QUÍ KHÁCH VUI LÒNG CỌC TRONG THỜI GIAN 15 PHÚT
            </MudText>
        }

        <MudGrid Class="mt-4">
            <MudItem xs="12">
                <MudPaper Class="p-4" Elevation="4">
                    <MudGrid>
                        <MudItem xs="12">
                            <MudText Typo="Typo.h6" Color="Color.Primary">THÔNG TIN KHÁCH HÀNG</MudText>
                        </MudItem>

                        <MudItem xs="4" Class="mb-3">
                            <MudText Align="Align.Left" Typo="Typo.subtitle1">
                                Tên khách hàng
                            </MudText>
                            <MudText Align="Align.Left" Typo="Typo.subtitle1">
                                Email
                            </MudText>
                            <MudText Align="Align.Left" Typo="Typo.subtitle1">
                                Số điện thoại
                            </MudText>
                        </MudItem>

                        <MudItem xs="8" Class="mb-3">
                            <MudText Align="Align.Right" Class="fw-bold" Typo="Typo.subtitle1">
                                @bill.cus_name
                            </MudText>
                            <MudText Align="Align.Right" Class="fw-bold" Typo="Typo.subtitle1">
                                @bill.email
                            </MudText>
                            <MudText Align="Align.Right" Class="fw-bold" Typo="Typo.subtitle1">
                                @bill.phone_number
                            </MudText>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            </MudItem>

            <MudItem xs="12">
                <MudPaper Class="p-4" Elevation="4">
                    <MudGrid>
                        <MudItem xs="12">
                            <MudText Typo="Typo.h6" Color="Color.Primary">THÔNG TIN HÓA ĐƠN</MudText>
                        </MudItem>

                        <MudItem xs="3">
                            <MudText Typo="Typo.subtitle1" Color="Color.Default">Mã hóa đơn</MudText>
                        </MudItem>
                        <MudItem xs="9">
                            <MudText Align="Align.End" Class="fw-bold" Typo="Typo.subtitle1">@bill.guest_car_code</MudText>
                        </MudItem>

                        <MudItem xs="3">
                            <MudText Typo="Typo.subtitle1" Color="Color.Default">Tài xế</MudText>
                        </MudItem>
                        <MudItem xs="9">
                            <MudText Align="Align.End" Class="fw-bold" Typo="Typo.subtitle1">@bill.driver_name  - @bill.driver_phone </MudText>
                        </MudItem>

                        <MudItem xs="3">
                            <MudText Typo="Typo.subtitle1" Color="Color.Default">Thời gian thuê</MudText>
                        </MudItem>
                        <MudItem xs="9">
                            <MudText Align="Align.End" Class="fw-bold" Typo="Typo.subtitle1">@bill.date_start - @bill.date_end</MudText>
                        </MudItem>
                        <MudItem xs="3">
                            <MudText Typo="Typo.subtitle1" Color="Color.Default">Tiền cọc</MudText>
                        </MudItem>
                        <MudItem xs="9">
                            <MudText Align="Align.End" Color="Color.Secondary" Class="fw-bold" Typo="Typo.subtitle1">@bill.deposit.ToString("#,##0") VNĐ</MudText>
                        </MudItem>  <MudItem xs="3">
                            <MudText Typo="Typo.subtitle1" Color="Color.Default">Tổng Tiền</MudText>
                        </MudItem>
                        <MudItem xs="9">
                            <MudText Align="Align.End" Color="Color.Secondary" Class="fw-bold" Typo="Typo.subtitle1">@bill.price.ToString("#,##0") VNĐ</MudText>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudPaper>
</MudContainer>

@code {
    public int id { get; set; }
    private GuestCarDriver_checkout bill = new GuestCarDriver_checkout();
    private string url = "http://localhost:49922/api/GuestCarDriver";
    private string urlUpdateStatusBill = "http://localhost:49922/api/GuestDriver/PutStatus10";
    [Parameter] public int billId { get; set; }
    private string responseCode;

    protected override async Task OnInitializedAsync()
    {
        // billId = await js.InvokeAsync<string>("sessionStorage.getItem", "billId");
        try
        {
            var response = await httpClient.GetFromJsonAsync<GuestCarDriver_checkout>($"{url}/{billId}");

            bill = response;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi gọi API: {ex.Message}");
        }
        string currentUrl = Navigation.Uri;

        var uri = new Uri(currentUrl);
        var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);

        responseCode = queryParams["vnp_ResponseCode"];

        if (responseCode == "00")
        {
            await UpdateStatusBill10();
        }
        // await js.InvokeVoidAsync("sessionStorage.removeItem", "billId");
    }

    private async Task UpdateStatusBill10()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync($"{urlUpdateStatusBill}/{billId}", bill);
            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine($"Cập nhật trạng thái hóa đơn {billId} thành công!");
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Cập nhật trạng thái thất bại: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi: {ex.Message}", Severity.Error);
        }
    }
}
