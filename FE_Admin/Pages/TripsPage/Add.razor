@page "/addtrip"
@inject HttpClient httpClient
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<MudContainer Class="mt-14 pa-0" MaxWidth="MaxWidth.False">
    <MudGrid Class="pa-0">
        <MudItem xs="12">
            <MudPaper Elevation="0" Class="mb-3" Style="@($"color:{Colors.Grey.Darken4}; background:{Colors.Grey.Lighten4};")">
                <MudBreadcrumbs Class="pa-3" Items="_items"></MudBreadcrumbs>
            </MudPaper>
        </MudItem>
        <MudGrid xs="10" Class="mx-auto">
            <MudItem xs="12">
                <MudPaper Elevation="6" Class="pa-8">
                    <MudForm @ref="form">
                        <MudItem xs="12" md="12">
                            <MudPaper Elevation="0" Class="mb-3" Style="@($"color:{Colors.Grey.Darken4};")">
                                <MudText Typo="Typo.h6" Class="mb-5">Thêm Chuyến Đi</MudText>
                            </MudPaper>
                        </MudItem>
                        <MudGrid Gutter="true">
                            <MudItem xs="6" Class="mb-4">
                                <MudTextField Label="Điểm khởi hành" @bind-Value="newTrip.from" Placeholder="Từ"
                                              Variant="Variant.Outlined" Required="true"
                                              Validation="@(new Func<string, IEnumerable<string>>(EmployeeValidateFullName))" />

                            </MudItem>
                            <MudItem xs="6" Class="mb-4">
                                <MudTextField Label="Điểm đến" @bind-Value="newTrip.to" Placeholder="Đến"
                                              Variant="Variant.Outlined" Required="true"
                                              Validation="@(new Func<string, IEnumerable<string>>(EmployeeValidateFullDiemden))" />
                            </MudItem>
                            @*   <MudItem xs="6" Class="mb-4">
                            <MudTextField Label="Hình ảnh chuyến đi" @bind-Value="newTrip.img_trip" Placeholder="URL Hình Ảnh"
                            Variant="Variant.Outlined" />
                            </MudItem> *@
                            <MudItem xs="6" Class="mb-4">
                                <MudSelect @bind-Value="newTrip.status" Label="Trạng thái " Variant="Variant.Outlined" Required="true">
                                    <MudSelectItem Value="true">Hoạt động</MudSelectItem>
                                    <MudSelectItem Value="false">Không hoạt động</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            <MudItem xs="6" Class="mb-4">
                                <MudSelect @bind-Value="newTrip.is_return" Label="Trở về" Variant="Variant.Outlined">
                                    <MudSelectItem Value="true">Khứ hồi</MudSelectItem>
                                    <MudSelectItem Value="false">Một chiều</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            <MudItem xs="12" Class="d-flex justify-end">
                                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.Save"
                                           Color="Color.Primary" OnClick="Addtrip">Lưu</MudButton>
                            </MudItem>
                        </MudGrid>
                    </MudForm>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudGrid>
</MudContainer>

@code {
    private trip_create newTrip = new trip_create();
    private MudForm form;
    private string url = "http://localhost:49922/api/Trips/trip";
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Chuyến đi", href: null, icon: @Icons.Material.Outlined.LocationOn),
        new BreadcrumbItem("Danh sách chuyến đi", href: "/gettrip", icon: @Icons.Material.Outlined.List),
        new BreadcrumbItem("Cập nhật", href: null, icon: @Icons.Material.Filled.Edit),
    };

    private async Task Addtrip()
    {
        newTrip.emp_create = 5;
        try
        {
            var response = await httpClient.PostAsJsonAsync(url, newTrip);
            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add("Thêm thành công!", Severity.Success);
                Navigation.NavigateTo("/gettrip");
            }
            else
            {
                var errorMsg = await response.Content.ReadAsStringAsync();
                Snackbar.Add($"Lỗi: {errorMsg}", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
    }
    private IEnumerable<string> EmployeeValidateFullName(string fullName)
    {
        if (string.IsNullOrWhiteSpace(fullName))
        {
            yield return "Vui lòng điền điểm khởi hành .";
        }
        else if (fullName.Length < 2 || fullName.Length > 150)
        {
            yield return "Điểm khởi hành không hợp lệ.";
        }
        else if (fullName.Any(ch => !char.IsLetter(ch) && !char.IsWhiteSpace(ch)))
        {
            yield return "Điểm khởi hành không được chứa ký tự đặc biệt.";
        }
    }
    private IEnumerable<string> EmployeeValidateFullDiemden(string DiemDen)
    {
        if (string.IsNullOrWhiteSpace(DiemDen))
        {
            yield return "Vui lòng điền điểm đến.";
        }
        else if (DiemDen.Length < 2 || DiemDen.Length > 150)
        {
            yield return "Điểm đến không hợp lệ.";
        }
        else if (DiemDen.Any(ch => !char.IsLetter(ch) && !char.IsWhiteSpace(ch)))
        {
            yield return "Điểm đến không được chứa ký tự đặc biệt.";
        }
    }
}
