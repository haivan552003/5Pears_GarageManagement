@inject MudBlazor.ISnackbar Snackbar
@inject HttpClient httpClient // Thêm inject HttpClient


<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">@ContentText</MudText>
        <MudForm @ref="form">
            <MudGrid Gutter="true">
                <MudItem xs="6" Class="mx-auto">
                    <MudTextField Label="Mã CT chuyến đi" @bind-Value="SelectedTrip.trip_detail_code"
                                  Placeholder="Nhập mã CT chuyến đi" Variant="Variant.Outlined" />
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudNumericField T="float" Label="Khoảng cách" @bind-Value="SelectedTrip.distance"
                                     Placeholder="Nhập khoảng cách" Variant="Variant.Outlined" Required="true" />
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudTextField T="float" Label="Giá" @bind-Value="SelectedTrip.price"
                                  Placeholder="Nhập giá" Variant="Variant.Outlined" Required="true" />
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudSelect @bind-Value="SelectedTrip.driver_id" Label="Mã Tài Xế" Variant="Variant.Outlined" Required="true">
                        @foreach (var driver in driverss)
                        {
                            <MudSelectItem Value="@driver.id">@driver.fullname</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudSelect @bind-Value="SelectedTrip.location_from_id" Label="Điểm đến" Variant="Variant.Outlined" Required="true">
                        @foreach (var location in locations)
                        {
                            <MudSelectItem Value="@location.id">@location.name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudSelect @bind-Value="SelectedTrip.car_id" Label="Xe" Variant="Variant.Outlined" Required="true">
                        @foreach (var car in carss)
                        {
                            <MudSelectItem Value="@car.id">@car.car_name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudSelect @bind-Value="SelectedTrip.location_to_id" Label="Điểm khởi hành" Variant="Variant.Outlined" Required="true">
                        @foreach (var locations in locations)
                        {
                            <MudSelectItem Value="@locations.id">@locations.name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudSelect Variant="Variant.Outlined" @bind-Value="SelectedTrip.status" Label="Trạng thái" Required="true" RequiredError="Trạng thái là bắt buộc">
                        <MudSelectItem Value="true">Đang hoạt động</MudSelectItem>
                        <MudSelectItem Value="false">Ngưng hoạt động</MudSelectItem>
                    </MudSelect>
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudDatePicker @bind-Value="SelectedTrip.time_start" Label="Thời gian bắt đầu" Variant="Variant.Outlined" DateFormat="dd/MM/yyyy" MaxDate="@DateTime.Now" />
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudDatePicker @bind-Value="SelectedTrip.time_end" Label="Thời gian kết thúc" Variant="Variant.Outlined" DateFormat="dd/MM/yyyy" MaxDate="@DateTime.Now" />
                </MudItem>
                <MudItem xs="6" Class="mb-4">
                    <MudTextField Label="Trip_ID" @bind-Value="SelectedTrip.trip_id"
                                  Placeholder="Trip ID" Variant="Variant.Outlined" Required="true" />
                </MudItem>
                <MudItem xs="12" Class="mb-4">
                    <MudTextField Label="Voucher" @bind-Value="SelectedTrip.voucher"
                                  Placeholder="Mã voucher" Variant="Variant.Outlined" Required="true" />
                </MudItem>
            </MudGrid>
        </MudForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Hủy</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit">Lưu</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string ContentText { get; set; }
    [Parameter]
    public trip_detail SelectedTrip { get; set; } = new trip_detail();

    private trip_detail_update trip_Detail_Update = new trip_detail_update();

    private List<driver> driverss = new List<driver>();
    public string driverUrl = "http://localhost:49922/api/Driver";

    public List<location> locations = new List<location>();
    public string locationUrl = "http://localhost:49922/api/Location";

    public List<car> carss = new List<car>();
    public string carUrl = "http://localhost:49922/api/Cars/getAllCars";

    // private List<dropdown> drivers = new List<dropdown>();
    // private List<dropdown> locationsfrom = new List<dropdown>(); // điểm đến
    // private List<dropdown> cars = new List<dropdown>(); // Danh sách xe
    // private List<dropdown> locationsto = new List<dropdown>(); // điểm khởi hành


    private MudForm form;
    private DateTime? birthdayDate;

    protected override async Task OnInitializedAsync()
    {
        // drivers = await httpClient.GetFromJsonAsync<List<dropdown>>("http://localhost:49922/api/Dropdown/driver");

        // locationsfrom = await httpClient.GetFromJsonAsync<List<dropdown>>("http://localhost:49922/api/Dropdown/tripfrom");

        // cars = await httpClient.GetFromJsonAsync<List<dropdown>>("http://localhost:49922/api/Dropdown/car");

        // locationsto = await httpClient.GetFromJsonAsync<List<dropdown>>("http://localhost:49922/api/Dropdown/tripto");

        await LoadDriver();
        await LoadLocation();
        await LoadCar();

        birthdayDate = DateTime.Now;

        if (birthdayDate.HasValue)
        {
            SelectedTrip.time_end = birthdayDate.Value;
            SelectedTrip.time_start = birthdayDate.Value;
        }
    }
    private async Task LoadDriver()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<List<driver>>(driverUrl);
            if (response != null)
            {
                driverss = response;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi khi tải danh sách vai trò: {ex.Message}", Severity.Error);
        }
    }

    private async Task LoadLocation()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<List<location>>(locationUrl);
            if (response != null)
            {
                locations = response;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi khi tải danh sách vai trò: {ex.Message}", Severity.Error);
        }
    }

    private async Task LoadCar()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<List<car>>(carUrl);
            if (response != null)
            {
                carss = response;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi khi tải danh sách vai trò: {ex.Message}", Severity.Error);
        }
    }
    void Submit()
    {
        if (birthdayDate.HasValue)
        {
            SelectedTrip.time_end = birthdayDate.Value;
            SelectedTrip.time_start = birthdayDate.Value;
        }
        if (form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(SelectedTrip));
        }
    }

    void Cancel()
    {
        MudDialog.Close(DialogResult.Cancel());
    }
}
