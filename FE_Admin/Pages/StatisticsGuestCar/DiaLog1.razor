@using FE_Admin.Data
@inject HttpClient Http
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudContainer Style="max-height: 500px; overflow-y: auto">
            @if (isLoading)
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-4" />
            }
            else
            {
                <MudText Typo="Typo.h6" Class="mb-4">
                    Thống kê thuê xe theo tháng của xe @CarName
                </MudText>
                @if (monthlyStatistics.Any())
                {
                    <MudChart ChartType="ChartType.Line"
                              ChartSeries="@(new List<ChartSeries> {
                                  new ChartSeries {
                                      Name = "Doanh thu",
                                      Data = monthlyData
                                  }
                              })"
                              XAxisLabels="@monthlyLabels"
                              Width="100%"
                              Height="300px"
                              XAxisLines="true"
                              YAxisLines="true" />

                    <MudTable Items="@monthlyStatistics" Dense="true" Hover="true" Striped="true" Class="mt-4">
                        <HeaderContent>
                            <MudTh>Tháng</MudTh>
                            <MudTh Style="text-align: right">Số lần thuê</MudTh>
                            <MudTh Style="text-align: right">Doanh thu (VNĐ)</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>Tháng @context.Month</MudTd>
                            <MudTd Style="text-align: right">@context.TripCount</MudTd>
                            <MudTd Style="text-align: right">@string.Format("{0:N0}", context.TotalRevenue)</MudTd>
                        </RowTemplate>
                        <FooterContent>
                            <MudTd></MudTd>
                            <MudTd Style="text-align: right">
                                <strong>Tổng: @monthlyStatistics.Sum(x => x.TripCount)</strong>
                            </MudTd>
                            <MudTd Style="text-align: right">
                                <strong>Tổng: @string.Format("{0:N0}", monthlyStatistics.Sum(x => x.TotalRevenue)) VNĐ</strong>
                            </MudTd>
                        </FooterContent>
                    </MudTable>
                }
                else
                {
                    <MudText>Không có dữ liệu thống kê cho tài xế này</MudText>
                }
            }
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Cancel">Đóng</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public int CarId { get; set; }
    [Parameter] public string CarName { get; set; } = string.Empty;
    [Parameter] public string CarNumber { get; set; } = string.Empty;

    private bool isLoading = true;
    private double[] monthlyData = Array.Empty<double>();
    private string[] monthlyLabels = Array.Empty<string>();
    private List<MonthlyStatisticCar> monthlyStatistics = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadMonthlyData();
    }

    private async Task LoadMonthlyData()
    {
        try
        {
            isLoading = true;
            string endpoint = $"http://localhost:49922/api/StatisticsGuestCar/Car_monthly/{CarId}";

            var response = await Http.GetAsync(endpoint);

            if (response.IsSuccessStatusCode)
            {
                var data = await response.Content.ReadFromJsonAsync<List<MonthlyStatisticCar>>();
                if (data != null && data.Any())
                {
                    // Tạo dữ liệu cho bảng với tất cả các tháng
                    monthlyStatistics = Enumerable.Range(1, 12)
                        .Select(month => new MonthlyStatisticCar
                            {
                                Month = month,
                                TripCount = data.FirstOrDefault(m => m.Month == month)?.TripCount ?? 0,
                                TotalRevenue = data.FirstOrDefault(m => m.Month == month)?.TotalRevenue ?? 0
                            })
                        .ToList();

                    // Tạo dữ liệu cho biểu đồ - Chỉ lấy các tháng có dữ liệu
                    var dataPoints = data.OrderBy(m => m.Month).ToList();
                    monthlyData = dataPoints.Select(x => (double)x.TotalRevenue).ToArray();
                    monthlyLabels = dataPoints.Select(x => $"Tháng {x.Month}").ToArray();
                }
                else
                {
                    monthlyData = new double[] { 0 };
                    monthlyLabels = new string[] { "Không có dữ liệu" };
                }
            }
            else
            {
                Snackbar.Add($"Không thể tải dữ liệu. Status code: {response.StatusCode}", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi: {ex.Message}", Severity.Error);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void Cancel() => MudDialog.Cancel();
}