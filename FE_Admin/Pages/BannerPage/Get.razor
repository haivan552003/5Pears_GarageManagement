@page "/getbanner"
@inject HttpClient httpClient
@inject IJSRuntime js

<MudContainer Class="mt-14 pa-0" MaxWidth="MaxWidth.False">
    <MudGrid Class="pa-0">
        <MudItem xs="12">
            <MudPaper Elevation="0" Class="mb-3" Style="@($"color:{Colors.Grey.Darken4}; background:{Colors.Grey.Lighten4};")">
                <MudBreadcrumbs Class="pa-3" Items="_items"></MudBreadcrumbs>
            </MudPaper>
            <MudPaper Elevation="0">
                <MudDataGrid Class="mx-auto pa-2" T="banner" Dense="true" Hover="true" Bordered="true" Striped="true" MultiSelection="true" Items="@Elements" SortMode="SortMode.Multiple" Filterable="false" QuickFilter="@_quickFilter"
                             Hideable="true" RowClick="@RowClicked" RowContextMenuClick="RowRightClicked" SelectedItemsChanged="@SelectedItemsChanged">
                    <ToolBarContent>
                        <MudItem xs="4" Elevation="0" Class="pb-3">
                            <MudTextField @bind-Value="_searchString" Placeholder="Tìm kiếm..." Adornment="Adornment.Start" Immediate="true"
                                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                        </MudItem>

                        <MudItem xs="8" Elevation="0" Class="d-flex justify-end flex-grow-1 gap-4 pb-3">
                            <MudButton Href="/addbanner" Variant="Variant.Outlined" StartIcon="fas fa-plus" Color="Color.Info" Size="Size.Small">
                                Thêm mới
                            </MudButton>
                        </MudItem>
                    </ToolBarContent>
                    <Columns>
                        <SelectColumn T="banner" />
                        @* <PropertyColumn T="banner" TProperty="int" Property="x => x.id_banner" /> *@
                        <PropertyColumn T="banner" TProperty="string" Property="x => x.title" SortBy="@_sortBy" Class="fw-bold" Title="Tiêu đề" />
                        <TemplateColumn T="banner" Class="fw-bold" Title="Hình ảnh">
                            <CellTemplate Context="element">
                                <MudImage Fluid="true" Src="@element.Item.img_banner" Alt="@element.Item.title" Class="rounded-lg" Width="200" Height="100" />
                            </CellTemplate>
                        </TemplateColumn>
                        <PropertyColumn T="banner" TProperty="string" Property="x => x.fullname" SortBy="@_sortBy" Class="fw-bold" Title="Người tạo" />
                        <TemplateColumn T="banner" Class="fw-bold" Title="Trạng Thái">
                            <CellTemplate Context="element">
                                @if (element.Item.status)
                                {
                                    <MudChip Color="Color.Success" Size="Size.Small" Variant="Variant.Text">Đang hoạt động</MudChip>
                                }
                                else
                                {
                                    <MudChip Color="Color.Error" Size="Size.Small" Variant="Variant.Text">Ngưng hoạt động</MudChip>
                                }
                            </CellTemplate>
                        </TemplateColumn>
                        <TemplateColumn T="banner" Class="fw-bold" Title="Chức năng">
                            <CellTemplate Context="element">
                                <MudTooltip Text="Chỉnh sửa">
                                    <MudIconButton Href="@($"/editbanner/{element.Item.id}")" Icon="far fa-edit" Color="Color.Success" Size="Size.Small" />
                                </MudTooltip>
                                <MudTooltip Text="Xóa">
                                    <MudIconButton Icon="far fa-trash-alt" Color="Color.Error" Size="Size.Small" />
                                </MudTooltip>
                            </CellTemplate>
                        </TemplateColumn>
                    </Columns>
                    <PagerContent>
                        <MudDataGridPager T="banner" />
                    </PagerContent>
                </MudDataGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>


@code {
    [Parameter] public int Id { get; set; }
    private IEnumerable<banner> Elements = new List<banner>();
    private Dictionary<int, string> CategoryDict = new Dictionary<int, string>();
    private string _searchString;
    private bool _sortNameByLength;
    private List<string> _events = new();
    private string url = "http://localhost:49922/api/Banner";

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
            {
            new BreadcrumbItem("Banner", href: null, icon: @Icons.Material.Outlined.Image),
            new BreadcrumbItem("Danh sách banner", href: "/getbanner", icon: @Icons.Material.Outlined.List),
            };


    private Func<banner, object> _sortBy => x =>
    {
        if (_sortNameByLength)
            return x.title.Length;
        else
            return x.title;
    };

    private string GenerateDeleteUrl(int id)
    {
        return $"/deleteproduct/{id}";
    }

    private string GetRoleTaskName(int cateId)
    {
        return CategoryDict.TryGetValue(cateId, out var name) ? name : "Unknown";
    }

    private Func<banner, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if ($"{x.title} {x.id} {GetRoleTaskName(x.id)}".Contains(_searchString))
            return true;

        return false;
    };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Elements = await httpClient.GetFromJsonAsync<List<banner>>(url);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    void RowClicked(DataGridRowClickEventArgs<banner> args)
    {
        _events.Insert(0, $"Event = RowClick, Index = {args.RowIndex}, Data = {System.Text.Json.JsonSerializer.Serialize(args.Item)}");
    }

    void RowRightClicked(DataGridRowClickEventArgs<banner> args)
    {
        _events.Insert(0, $"Event = RowRightClick, Index = {args.RowIndex}, Data = {System.Text.Json.JsonSerializer.Serialize(args.Item)}");
    }

    void SelectedItemsChanged(HashSet<banner> items)
    {
        _events.Insert(0, $"Event = SelectedItemsChanged, Data = {System.Text.Json.JsonSerializer.Serialize(items)}");
    }
}
