@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime js
@inject IDialogService DialogService

<MudItem xs="3">
    <MudNavMenu Color="Color.Primary">
        <MudNavLink Class="mt-5" Href="/profile" Icon="@Icons.Material.Filled.Face">Thông tin tài khoản</MudNavLink>
        <MudNavGroup Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.History" Title="Lịch sử mua vé" Expanded="false">
            <MudNavLink Href="/booking_history">Đặt vé</MudNavLink>
            <MudNavLink Href="/car_history">Thuê xe</MudNavLink>
            <MudNavLink Href="/driver_history">Thuê tài xế</MudNavLink>
            <MudNavLink Href="/cardriver_history">Thuê xe và tài xế</MudNavLink>
        </MudNavGroup>
        <MudNavLink Href="/billing" Icon="@Icons.Material.Filled.LocationOn">Địa chỉ của bạn</MudNavLink>
        <MudNavLink Href="/about" Icon="@Icons.Material.Filled.Password">Đặt lại mật khẩu</MudNavLink>
        <MudNavLink Class="mb-5" OnClick="Logout" Icon="@Icons.Material.Filled.Logout">Đăng xuất</MudNavLink>
    </MudNavMenu>
</MudItem>
<script>
    // Lấy token từ localStorage
    function getAuthToken() {
        return localStorage.getItem("authToken");
    }

</script>
@code {
    [Parameter] public int id_cus { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var token = await js.InvokeAsync<string>("localStorage.getItem", "authToken");

        if (!string.IsNullOrEmpty(token))
        {
            var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
            var jwtToken = handler.ReadJwtToken(token);

            var usernameClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "id");

            if (usernameClaim != null)
            {
                id_cus = Convert.ToInt16(usernameClaim.Value);
            }
        }
        }
    private async Task Logout()
    {
        // Remove the authentication token from localStorage
        await js.InvokeVoidAsync("localStorage.removeItem", "authToken");

        // Navigate to the login page and force a full page reload
        NavigationManager.NavigateTo("/", true);
    }

   
}