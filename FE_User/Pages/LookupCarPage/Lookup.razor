@page "/lookup"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http

<main class="container">
    <div class="d-flex justify-content-center align-items-center pt-50">
        <div class="card p-4 border-0" style="width: 60%;">
            <div class="card-body">
                <h6 class="card-title text-center fw-bold fs-4 mb-5" style="font-size: 1.25rem!important; color: #00613d;">TRA CỨU THÔNG TIN ĐẶT VÉ</h6>
                <EditForm Model="@lookupModel" OnValidSubmit="OnSubmit"> 
                    <DataAnnotationsValidator />
                    <div style="height: 90px;">
                        <MudGrid>
                            <MudItem xs="12">
                                <MudTextField Style="background: #ffff" @bind-Value="lookupModel.PhoneNumber" Label="Số điện thoại" Placeholder="Vui lòng nhập số điện thoại" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                <p class="text-danger" style="font-size: 14px;">
                                    <ValidationMessage For="@(() => lookupModel.PhoneNumber)" />
                                </p>
                            </MudItem>
                        </MudGrid>
                    </div>
                    <div style="height: 90px;">
                        <MudGrid>
                            <MudItem xs="12">
                                <MudTextField Style="background: #ffff" @bind-Value="lookupModel.TicketCode" Label="Mã vé xe" Placeholder="Vui lòng nhập mã vé" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                <p class="text-danger" style="font-size: 14px;">
                                    <ValidationMessage For="@(() => lookupModel.TicketCode)" />
                                </p>
                            </MudItem>
                        </MudGrid>   
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary" style="width: 224px; font-size: 14px!important; border-radius: 32px;">Tra Cứu</button>
                    </div>
                </EditForm>

                @if (lookupResults != null && lookupResults.Count > 0)
                {
                    <div class="modal fade show" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-modal="true" role="dialog" style="display: block;">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title fs-5" id="exampleModalLabel">Kết Quả Tra Cứu</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseModal"></button>
                                </div>
                                <div class="modal-body">
                                    @foreach (var result in lookupResults)
                                    {
                                        <div class="row mb-4">
                                            <div class="col-md-6">
                                                <p><strong>Khách hàng:</strong> @result.CustomerName</p>
                                                <p><strong>Số điện thoại:</strong> @result.PhoneNumber</p>
                                                <p><strong>Email:</strong> @result.Email</p>

                                                <p><strong>Ngày khởi hành:</strong> @result.TripStartDate.ToString("dd/MM/yyyy")</p>
                                                <p><strong>Ngày kết thúc:</strong> @result.TripEndDate.ToString("dd/MM/yyyy")</p>
                                                <p><strong>Điểm đón:</strong> @result.TripFrom</p>
                                                <p><strong>Điểm đến:</strong> @result.TripTo</p>

                                                <p><strong>Giá vé:</strong> @result.TripPrice</p>
                                            </div>
                                            <div class="col-md-6">
                                                <p><strong>Số ghế:</strong> @result.CarSeat</p>
                                                <p><strong>Màu xe:</strong> @result.CarColor</p>
                                                <p><strong>Tên xe:</strong> @result.CarName</p>
                                                <p><strong>Biển số xe:</strong> @result.CarNumber</p>
                                                <p><strong>Tên tài xế:</strong> @result.DriverName</p>
                                                <p><strong>Hiệu xe:</strong> @result.CarBrand</p>
                                                <p><strong>Loại xe:</strong> @result.CarType</p>
                                                <p><strong>Trạng thái chuyến xe:</strong> @result.TripStatus</p>
                                            </div>
                                        </div>
                                        <hr />
                                    }
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-danger me-2" data-bs-dismiss="modal" @onclick="CloseModal">Thoát</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger mt-4">@errorMessage</div>
                }
            </div>
        </div>
    </div>
</main>

@code {
    private LookupModel lookupModel = new LookupModel();
    private List<lookup> lookupResults = new List<lookup>();
    private List<CarSeat> seatsResults = new List<CarSeat>();
    private string errorMessage;

    private async Task OnSubmit()
    {
        errorMessage = null;
        lookupResults.Clear();
        var response = await Http.GetAsync($"http://localhost:49922/api/Lookup/{lookupModel.PhoneNumber}/{lookupModel.TicketCode}");
        if (response.IsSuccessStatusCode)
        {
            var results = await response.Content.ReadFromJsonAsync<IEnumerable<lookup>>();

            lookupResults = results.ToList();

            if (lookupResults.Count == 0)
            {
                errorMessage = "Không tìm thấy thông tin đặt vé!";
            }
        }
        else
        {
            errorMessage = "Đã xảy ra lỗi khi tra cứu thông tin. Vui lòng thử lại sau.";
        }
    }
    private void CloseModal()
    {
       
    }

    public class LookupModel
    {
        [Required(ErrorMessage = "Vui lòng nhập số điện thoại")]
        [RegularExpression(@"^(03|05|07|08|09)\d{8}$", ErrorMessage = "Số điện thoại không hợp lệ. Số phải bắt đầu bằng 0 và có đúng 10 chữ số.")]
        public string PhoneNumber { get; set; }

        [Required(ErrorMessage = "Vui lòng nhập mã vé xe")]
        public string? TicketCode { get; set; }
    }

}
