@page "/getTrip"
@using System.Net.Http.Json
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar

<div class="container">
    <MudItem xs="12" Class="mx-auto mt-10">
        <MudCard Class="w-100">
            <MudText Class="text-center text-uppercase fw-bold pt-3" Typo="Typo.h5" Color="Color.Primary">Tra cứu chuyến xe</MudText>

            <MudCardContent Class="pt-0">
                <MudRadioGroup @bind-Value="searchRequest.is_return" Class="pb-5">
                    <MudRadio Value="false" Color="Color.Primary" Size="Size.Small" Dense="false">Một Chiều</MudRadio>
                    <MudRadio Value="true" Color="Color.Primary" Size="Size.Small" Dense="false">Khứ Hồi</MudRadio>
                </MudRadioGroup>
                <MudGrid>
                    @if (searchRequest.is_return)
                    {
                        <MudItem xs="12" sm="6" md="3">
                            <MudStack>
                                <MudAutocomplete T="string"
                                                 @bind-Value="searchRequest.location_from"
                                                 Label="Chọn điểm đi"
                                                 Variant="Variant.Outlined"
                                                 SearchFunc="SearchLocationAsync"
                                                 ToStringFunc="(item) => item"
                                                 ResetValueOnEmptyText="true"
                                                 OpenIcon="@Icons.Material.Filled.Search"
                                                 AdornmentIcon="@Icons.Material.Filled.LocationOn"
                                                 AdornmentColor="Color.Primary"
                                                 Placeholder="Nhập điểm đi..." />
                            </MudStack>
                        </MudItem>

                        <MudItem xs="12" sm="6" md="3">
                            <MudStack>
                                <MudAutocomplete T="string"
                                                 @bind-Value="searchRequest.location_to"
                                                 Label="Chọn điểm đến"
                                                 Variant="Variant.Outlined"
                                                 SearchFunc="SearchLocationToAsync"
                                                 ToStringFunc="(item) => item"
                                                 ResetValueOnEmptyText="true"
                                                 OpenIcon="@Icons.Material.Filled.Search"
                                                 AdornmentIcon="@Icons.Material.Filled.LocationOn"
                                                 AdornmentColor="Color.Primary"
                                                 Placeholder="Nhập điểm đến..." />
                            </MudStack>
                        </MudItem>
                        <MudItem xs="12" sm="6" md="3">
                            <MudStack>
                                <MudDatePicker Label="Ngày đi" Variant="Variant.Outlined" @bind-Date="searchRequest.date_start" RequiredError="Vui lòng chọn thông tin" />
                            </MudStack>
                        </MudItem>
                        <MudItem xs="12" sm="6" md="3">
                            <MudStack>
                                <MudDatePicker Label="Ngày về" Variant="Variant.Outlined" @bind-Date="searchRequest.date_return" RequiredError="Vui lòng chọn thông tin" />
                            </MudStack>
                        </MudItem>
                    }
                    else
                    {
                        <MudItem xs="12" sm="6" md="4">
                            <MudStack>
                                <MudAutocomplete T="string"
                                                 @bind-Value="searchRequest.location_from"
                                                 Label="Chọn điểm đi"
                                                 Variant="Variant.Outlined"
                                                 SearchFunc="SearchLocationAsync"
                                                 ToStringFunc="(item) => item"
                                                 ResetValueOnEmptyText="true"
                                                 OpenIcon="@Icons.Material.Filled.Search"
                                                 AdornmentIcon="@Icons.Material.Filled.LocationOn"
                                                 AdornmentColor="Color.Primary"
                                                 Placeholder="Nhập điểm đi..." />
                            </MudStack>

                        </MudItem>
                        <MudItem xs="12" sm="6" md="4">
                            <MudStack>
                                <MudAutocomplete T="string"
                                                 @bind-Value="searchRequest.location_to"
                                                 Label="Chọn điểm đến"
                                                 Variant="Variant.Outlined"
                                                 SearchFunc="SearchLocationToAsync"
                                                 ToStringFunc="(item) => item"
                                                 ResetValueOnEmptyText="true"
                                                 OpenIcon="@Icons.Material.Filled.Search"
                                                 AdornmentIcon="@Icons.Material.Filled.LocationOn"
                                                 AdornmentColor="Color.Primary"
                                                 Placeholder="Nhập điểm đến..." />
                            </MudStack>
                        </MudItem>
                        <MudItem xs="12" sm="6" md="4">
                            <MudStack>
                                <MudDatePicker Label="Ngày đi" Variant="Variant.Outlined" @bind-Date="searchRequest.date_start" RequiredError="Vui lòng chọn thông tin" />
                            </MudStack>
                        </MudItem>
                    }
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
                <MudButton Class="mx-auto mb-4 mt-0" OnClick="SearchTrip" Variant="Variant.Outlined" Size="Size.Large" IconClass="@Icons.Material.Outlined.Search" Color="Color.Primary">Tìm kiếm chuyến xe</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>

    <MudGrid Class="pa-0 mt-10">
        @if (search_tripdetail != null && search_tripdetail.Any())
        {
            @if (dateReturnRaw == null)
            {
                @foreach (var trip in tripForm1)
                {
                    <MudItem xs="12" Class="mx-auto">
                        <MudCard Outlined="true">
                            <MudCardContent>
                                <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-0">
                                    <MudTabPanel Text="Lịch trình">
                                        <MudPaper Elevation="0" Class="pa-5 mb-5">
                                            <MudGrid>
                                                <MudItem xs="4">
                                                    <MudGrid>
                                                        <MudItem xs="12">
                                                            <MudText Typo="Typo.h6" Class="me-2">
                                                                @trip.time_start.ToString("HH:mm")
                                                                <MudIcon Icon="@Icons.Material.Filled.FiberManualRecord" Size="Size.Medium" Color="Color.Primary" Class="me-2" />
                                                            </MudText>
                                                        </MudItem>
                                                        <MudItem xs="12">
                                                            <MudText Typo="Typo.subtitle1" Class="fw-bold">@trip.from</MudText>
                                                        </MudItem>
                                                    </MudGrid>
                                                </MudItem>

                                                <MudItem xs="4" md="2">
                                                    <MudGrid>
                                                        <MudItem xs="12">
                                                            <MudText Typo="Typo.subtitle1" Class="me-2 text-center">
                                                                @GetTimeDifference(@trip.time_start, @trip.time_end)
                                                            </MudText>
                                                        </MudItem>
                                                        <MudItem xs="12">
                                                            <MudText Typo="Typo.body2" Class="text-muted text-center">(UTC+07:00) Hanoi</MudText>
                                                        </MudItem>
                                                    </MudGrid>
                                                </MudItem>

                                                <MudItem xs="4">
                                                    <MudGrid>
                                                        <MudItem xs="12">
                                                            <MudText Typo="Typo.h6" Class="me-2" Align="Align.End">
                                                                <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Medium" Color="Color.Secondary" Class="me-2" />
                                                                @trip.time_end.ToString("HH:mm")
                                                            </MudText>
                                                        </MudItem>
                                                        <MudItem xs="12">
                                                            <MudText Typo="Typo.subtitle1" Class="fw-bold" Align="Align.End">@trip.to</MudText>
                                                        </MudItem>
                                                    </MudGrid>
                                                </MudItem>

                                                <MudItem xs="12" md="2">
                                                    <MudGrid>
                                                        <MudItem xs="9" md="12">
                                                            <MudText Typo="Typo.h6" Color="Color.Error" Align="Align.End">@trip.price.ToString("#,##0")</MudText>
                                                        </MudItem>
                                                        <MudItem xs="3" md="12">
                                                            <MudButton Variant="Variant.Outlined" Class="float-end" Color="Color.Primary" Size="Size.Small" Href="@($"/getTrip/{trip.id}")">
                                                                Đặt vé
                                                            </MudButton>
                                                        </MudItem>
                                                    </MudGrid>
                                                </MudItem>

                                                <MudItem xs="12">
                                                    @if (trip.seat_null > 0)
                                                    {
                                                        <MudText Typo="Typo.subtitle1" Color="Color.Success" Class="fw-bold" Align="Align.End">@trip.seat_null ghế trống</MudText>
                                                    }
                                                    else
                                                    {
                                                        <MudText Typo="Typo.subtitle1" Color="Color.Success" Class="fw-bold" Align="Align.End">Hết ghế</MudText>
                                                    }
                                                </MudItem>
                                            </MudGrid>
                                        </MudPaper>

                                        <MudTimeline Class="d-none d-md-block" TimelineAlign="TimelineAlign.Start">
                                            <MudTimelineItem Color="Color.Secondary" Elevation="25">
                                                <ItemContent>
                                                    <MudPaper Elevation="0" Class="mt-n1">
                                                        <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@trip.location_from (@trip.from)</MudText>
                                                        <MudText Typo="Typo.body2">@trip.time_start.ToString("dd/MM/yyyy HH:mm")</MudText>
                                                        <MudText Typo="Typo.body2">@trip.location_from_address</MudText>
                                                    </MudPaper>
                                                </ItemContent>
                                            </MudTimelineItem>
                                            <MudTimelineItem Color="Color.Secondary" Elevation="25">
                                                <ItemContent>
                                                    <MudPaper Elevation="0" Class="mt-n1">
                                                        <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@trip.location_to (@trip.to)</MudText>
                                                        <MudText Typo="Typo.body2">@trip.time_end.ToString("dd/MM/yyyy HH:mm")</MudText>
                                                        <MudText Typo="Typo.body2">@trip.location_to_address</MudText>
                                                    </MudPaper>
                                                </ItemContent>
                                            </MudTimelineItem>
                                        </MudTimeline>
                                    </MudTabPanel>
                                    <MudTabPanel Text="Chính sách">
                                        <MudText>
                                            <p style="color: blue"><strong>Chính sách huỷ vé</strong></p>
                                            <p style="color: red;"> * Đối với khách hàng đến bến trễ sẽ hủy vé không hoàn tiền.</p>
                                            <p><strong style="color: blue">Yêu cầu khi lên xe</strong></p>
                                            <ul>
                                                <li>* Có mặt tại Văn phòng/Bến xe (Địa điểm xe đón trực tiếp) trước 30 phút để làm thủ tục lên xe (đối với ngày lễ tết cần ra trước 60 phút).</li>
                                                <li>* Xuất trình thông tin vé được gửi qua Email/Website hoặc liên hệ quầy vé để nhận thông tin vé trước khi lên xe.</li>
                                                <li>* Không mang thức ăn/đồ uống có mùi lên xe.</li>
                                                <li>* Không hút thuốc, không sử dụng đồ uống có cồn hoặc sử dụng chất kích thích trên xe.</li>
                                                <li>* Không mang các vật dễ cháy nổ lên xe.</li>
                                                <li>* Không vứt rác trên xe.</li>
                                                <li>* Không mang động vật lên xe.</li>
                                            </ul>

                                            <p><strong style="color: blue">Hành lý xách tay</strong></p>
                                            <ul>
                                                <li>* Tổng trọng lượng hành lý không vượt quá 20kg</li>
                                                <li>* Không vận chuyển hàng hoá cồng kềnh</li>
                                            </ul>

                                            <p><strong style="color: blue">Trẻ em dưới 6 tuổi và phụ nữ có thai</strong></p>
                                            <ul>
                                                <li>* Trẻ em dưới 6 tuổi, cao từ 1.3m trở xuống, cân nặng dưới 30kg thì không phải mua vé.</li>
                                                <li>* Trong trường hợp trẻ em không thoả 1 trong 3 tiêu chí trên sẽ mua 01 vé tương đương với người lớn.</li>
                                                <li>* Mỗi người lớn sẽ đi kèm tối đa một trẻ em.</li>
                                                <li>* Phụ nữ có thai cần đảm bảo sức khoẻ trong suốt quá trình di chuyển.</li>
                                            </ul>
                                        </MudText>
                                    </MudTabPanel>
                                </MudTabs>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
            }

            else
            {
                <MudItem xs="12">
                    <MudTabs Elevation="0" Rounded="true" Centered="true" Color="@Color.Primary">
                        <MudTabPanel Text="CHUYẾN ĐI">
                            @foreach (var trip in tripForm1)
                            {
                                <MudItem xs="12" Class="mx-auto mt-5">
                                    <MudCard Outlined="true">
                                        <MudCardContent>
                                            <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-0">
                                                <MudTabPanel Text="Lịch trình">
                                                    <MudPaper Elevation="0" Class="pa-5 mb-5">
                                                        <MudGrid Spacing="4">
                                                            <MudItem xs="4">
                                                                <MudGrid>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.h6" Class="me-2">
                                                                            @trip.time_start.ToString("HH:mm")
                                                                            <MudIcon Icon="@Icons.Material.Filled.FiberManualRecord" Size="Size.Medium" Color="Color.Primary" Class="me-2" />
                                                                        </MudText>
                                                                    </MudItem>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.h6" Class="fw-bold">@trip.from</MudText>
                                                                    </MudItem>
                                                                </MudGrid>
                                                            </MudItem>

                                                            <MudItem xs="4" md="2">
                                                                <MudGrid>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.subtitle1" Class="me-2 text-center">
                                                                            @GetTimeDifference(@trip.time_start, @trip.time_end)
                                                                        </MudText>
                                                                    </MudItem>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.body2" Class="text-muted text-center">(UTC+07:00) Hanoi</MudText>
                                                                    </MudItem>
                                                                </MudGrid>
                                                            </MudItem>


                                                            <MudItem xs="4">
                                                                <MudGrid>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.h6" Class="me-2" Align="Align.End">
                                                                            <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Medium" Color="Color.Secondary" Class="me-2" />
                                                                            @trip.time_end.ToString("HH:mm")
                                                                        </MudText>
                                                                    </MudItem>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.h6" Class="fw-bold" Align="Align.End">@trip.to</MudText>
                                                                    </MudItem>
                                                                </MudGrid>
                                                            </MudItem>

                                                            <MudItem xs="12" md="2">
                                                                <MudGrid>
                                                                    <MudItem xs="7" md="12">
                                                                        <MudText Typo="Typo.h6" Color="Color.Error" Class="fw-bold" Align="Align.End">@trip.price.ToString("#,##0")</MudText>
                                                                    </MudItem>
                                                                    <MudItem xs="5" md="12">
                                                                        <MudButton Variant="Variant.Outlined" Class="float-end" Color="Color.Primary" Size="Size.Small" OnClick="() => SaveTripIdTo(trip.id)">
                                                                            Chọn chuyến
                                                                        </MudButton>
                                                                    </MudItem>
                                                                </MudGrid>
                                                            </MudItem>

                                                            <MudItem xs="12">
                                                                @if (trip.seat_null > 0)
                                                                {
                                                                    <MudText Typo="Typo.subtitle1" Color="Color.Success" Class="fw-bold" Align="Align.End">@trip.seat_null ghế trống</MudText>
                                                                }
                                                                else
                                                                {
                                                                    <MudText Typo="Typo.subtitle1" Color="Color.Success" Class="fw-bold" Align="Align.End">Hết ghế</MudText>
                                                                }
                                                            </MudItem>
                                                        </MudGrid>
                                                    </MudPaper>

                                                    <MudTimeline Class="d-none d-md-block" TimelineAlign="TimelineAlign.Start">
                                                        <MudTimelineItem Color="Color.Secondary" Elevation="25">
                                                            <ItemContent>
                                                                <MudPaper Elevation="0" Class="mt-n1">
                                                                    <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@trip.location_from (@trip.from)</MudText>
                                                                    <MudText Typo="Typo.body2">@trip.time_start.ToString("dd/MM/yyyy HH:mm")</MudText>
                                                                    <MudText Typo="Typo.body2">@trip.location_from_address</MudText>
                                                                </MudPaper>
                                                            </ItemContent>
                                                        </MudTimelineItem>
                                                        <MudTimelineItem Color="Color.Secondary" Elevation="25">
                                                            <ItemContent>
                                                                <MudPaper Elevation="0" Class="mt-n1">
                                                                    <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@trip.location_to (@trip.to)</MudText>
                                                                    <MudText Typo="Typo.body2">@trip.time_end.ToString("dd/MM/yyyy HH:mm")</MudText>
                                                                    <MudText Typo="Typo.body2">@trip.location_to_address</MudText>
                                                                </MudPaper>
                                                            </ItemContent>
                                                        </MudTimelineItem>
                                                    </MudTimeline>
                                                </MudTabPanel>
                                                <MudTabPanel Text="Chính sách">
                                                    <MudText>
                                                        <p style="color: blue"><strong>Chính sách huỷ vé</strong></p>
                                                        <p style="color: red;"> * Đối với khách hàng đến bến trễ sẽ hủy vé không hoàn tiền.</p>
                                                        <p><strong style="color: blue">Yêu cầu khi lên xe</strong></p>
                                                        <ul>
                                                            <li>* Có mặt tại Văn phòng/Bến xe (Địa điểm xe đón trực tiếp) trước 30 phút để làm thủ tục lên xe (đối với ngày lễ tết cần ra trước 60 phút).</li>
                                                            <li>* Xuất trình thông tin vé được gửi qua Email/Website hoặc liên hệ quầy vé để nhận thông tin vé trước khi lên xe.</li>
                                                            <li>* Không mang thức ăn/đồ uống có mùi lên xe.</li>
                                                            <li>* Không hút thuốc, không sử dụng đồ uống có cồn hoặc sử dụng chất kích thích trên xe.</li>
                                                            <li>* Không mang các vật dễ cháy nổ lên xe.</li>
                                                            <li>* Không vứt rác trên xe.</li>
                                                            <li>* Không mang động vật lên xe.</li>
                                                        </ul>

                                                        <p><strong style="color: blue">Hành lý xách tay</strong></p>
                                                        <ul>
                                                            <li>* Tổng trọng lượng hành lý không vượt quá 20kg</li>
                                                            <li>* Không vận chuyển hàng hoá cồng kềnh</li>
                                                        </ul>

                                                        <p><strong style="color: blue">Trẻ em dưới 6 tuổi và phụ nữ có thai</strong></p>
                                                        <ul>
                                                            <li>* Trẻ em dưới 6 tuổi, cao từ 1.3m trở xuống, cân nặng dưới 30kg thì không phải mua vé.</li>
                                                            <li>* Trong trường hợp trẻ em không thoả 1 trong 3 tiêu chí trên sẽ mua 01 vé tương đương với người lớn.</li>
                                                            <li>* Mỗi người lớn sẽ đi kèm tối đa một trẻ em.</li>
                                                            <li>* Phụ nữ có thai cần đảm bảo sức khoẻ trong suốt quá trình di chuyển.</li>
                                                        </ul>
                                                    </MudText>
                                                </MudTabPanel>
                                            </MudTabs>
                                        </MudCardContent>
                                    </MudCard>
                                </MudItem>
                            }
                        </MudTabPanel>
                        <MudTabPanel Text="CHUYẾN VỀ">
                            @foreach (var trip in tripForm2)
                            {
                                <MudItem xs="12" Class="mx-auto mt-5">
                                    <MudCard Outlined="true">
                                        <MudCardContent>
                                            <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-0">
                                                <MudTabPanel Text="Lịch trình">
                                                    <MudPaper Elevation="0" Class="pa-5 mb-5">
                                                        <MudGrid>
                                                            <MudItem xs="4">
                                                                <MudGrid Spacing="4">
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.h6" Class="me-2">
                                                                            @trip.time_start.ToString("HH:mm")
                                                                            <MudIcon Icon="@Icons.Material.Filled.FiberManualRecord" Size="Size.Medium" Color="Color.Primary" Class="me-2" />
                                                                        </MudText>
                                                                    </MudItem>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.h6" Class="fw-bold">@trip.from</MudText>
                                                                    </MudItem>
                                                                </MudGrid>
                                                            </MudItem>

                                                            <MudItem xs="4" md="2">
                                                                <MudGrid>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.subtitle1" Class="me-2 text-center">
                                                                            @GetTimeDifference(@trip.time_start, @trip.time_end)
                                                                        </MudText>
                                                                    </MudItem>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.body2" Class="text-muted text-center">(UTC+07:00) Hanoi</MudText>
                                                                    </MudItem>
                                                                </MudGrid>
                                                            </MudItem>


                                                            <MudItem xs="4">
                                                                <MudGrid>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.h6" Class="me-2" Align="Align.End">
                                                                            <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Medium" Color="Color.Secondary" Class="me-2" />
                                                                            @trip.time_end.ToString("HH:mm")
                                                                        </MudText>
                                                                    </MudItem>
                                                                    <MudItem xs="12">
                                                                        <MudText Typo="Typo.h6" Class="fw-bold" Align="Align.End">@trip.to</MudText>
                                                                    </MudItem>
                                                                </MudGrid>
                                                            </MudItem>

                                                            <MudItem xs="12" md="2">
                                                                <MudGrid>
                                                                    <MudItem xs="7" md="12">
                                                                        <MudText Typo="Typo.h6" Color="Color.Error" Class="fw-bold" Align="Align.End">@trip.price.ToString("#,##0")</MudText>
                                                                    </MudItem>
                                                                    <MudItem xs="5" md="12">
                                                                        <MudButton Variant="Variant.Outlined" Class="float-end" Color="Color.Primary" Size="Size.Small" OnClick="() => SaveTripIdReturn(trip.id)">
                                                                            Chọn chuyến
                                                                        </MudButton>
                                                                    </MudItem>
                                                                </MudGrid>
                                                            </MudItem>

                                                            <MudItem xs="12">
                                                                @if (trip.seat_null > 0)
                                                                {
                                                                    <MudText Typo="Typo.subtitle1" Color="Color.Success" Class="fw-bold" Align="Align.End">@trip.seat_null ghế trống</MudText>
                                                                }
                                                                else
                                                                {
                                                                    <MudText Typo="Typo.subtitle1" Color="Color.Success" Class="fw-bold" Align="Align.End">Hết ghế</MudText>
                                                                }
                                                            </MudItem>
                                                        </MudGrid>
                                                    </MudPaper>

                                                    <MudTimeline Class="d-none d-md-block" TimelineAlign="TimelineAlign.Start">
                                                        <MudTimelineItem Color="Color.Secondary" Elevation="25">
                                                            <ItemContent>
                                                                <MudPaper Elevation="0" Class="mt-n1">
                                                                    <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@trip.location_from (@trip.from)</MudText>
                                                                    <MudText Typo="Typo.body2">@trip.time_start.ToString("dd/MM/yyyy HH:mm")</MudText>
                                                                    <MudText Typo="Typo.body2">@trip.location_from_address</MudText>
                                                                </MudPaper>
                                                            </ItemContent>
                                                        </MudTimelineItem>
                                                        <MudTimelineItem Color="Color.Secondary" Elevation="25">
                                                            <ItemContent>
                                                                <MudPaper Elevation="0" Class="mt-n1">
                                                                    <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@trip.location_to (@trip.to)</MudText>
                                                                    <MudText Typo="Typo.body2">@trip.time_end.ToString("dd/MM/yyyy HH:mm")</MudText>
                                                                    <MudText Typo="Typo.body2">@trip.location_to_address</MudText>
                                                                </MudPaper>
                                                            </ItemContent>
                                                        </MudTimelineItem>
                                                    </MudTimeline>
                                                </MudTabPanel>
                                                <MudTabPanel Text="Chính sách">
                                                    <MudText>
                                                        <p style="color: blue"><strong>Chính sách huỷ vé</strong></p>
                                                        <p style="color: red;"> * Đối với khách hàng đến bến trễ sẽ hủy vé không hoàn tiền.</p>
                                                        <p><strong style="color: blue">Yêu cầu khi lên xe</strong></p>
                                                        <ul>
                                                            <li>* Có mặt tại Văn phòng/Bến xe (Địa điểm xe đón trực tiếp) trước 30 phút để làm thủ tục lên xe (đối với ngày lễ tết cần ra trước 60 phút).</li>
                                                            <li>* Xuất trình thông tin vé được gửi qua Email/Website hoặc liên hệ quầy vé để nhận thông tin vé trước khi lên xe.</li>
                                                            <li>* Không mang thức ăn/đồ uống có mùi lên xe.</li>
                                                            <li>* Không hút thuốc, không sử dụng đồ uống có cồn hoặc sử dụng chất kích thích trên xe.</li>
                                                            <li>* Không mang các vật dễ cháy nổ lên xe.</li>
                                                            <li>* Không vứt rác trên xe.</li>
                                                            <li>* Không mang động vật lên xe.</li>
                                                        </ul>

                                                        <p><strong style="color: blue">Hành lý xách tay</strong></p>
                                                        <ul>
                                                            <li>* Tổng trọng lượng hành lý không vượt quá 20kg</li>
                                                            <li>* Không vận chuyển hàng hoá cồng kềnh</li>
                                                        </ul>

                                                        <p><strong style="color: blue">Trẻ em dưới 6 tuổi và phụ nữ có thai</strong></p>
                                                        <ul>
                                                            <li>* Trẻ em dưới 6 tuổi, cao từ 1.3m trở xuống, cân nặng dưới 30kg thì không phải mua vé.</li>
                                                            <li>* Trong trường hợp trẻ em không thoả 1 trong 3 tiêu chí trên sẽ mua 01 vé tương đương với người lớn.</li>
                                                            <li>* Mỗi người lớn sẽ đi kèm tối đa một trẻ em.</li>
                                                            <li>* Phụ nữ có thai cần đảm bảo sức khoẻ trong suốt quá trình di chuyển.</li>
                                                        </ul>
                                                    </MudText>
                                                </MudTabPanel>
                                            </MudTabs>
                                        </MudCardContent>
                                    </MudCard>
                                </MudItem>
                            }
                        </MudTabPanel>
                    </MudTabs>
                </MudItem>
            }
        }
        else
        {
            <MudText Typo="Typo.h6" Color="Color.Secondary" Class="mx-auto">
                Không có dữ liệu
            </MudText>
        }
    </MudGrid>
</div>

@code {
    private int _selected = 1;
    Margin _margin;
    bool _dense;
    bool _readonly;
    bool _placeholder;
    bool _helperText;
    bool _helperTextOnFocus;
    bool _clearable;
    private dropdown dropDown = new dropdown();
    private DateTime? _date = DateTime.Today;
    public bool Dense_Radio { get; set; } = true;
    private List<trip> Trips = new List<trip>();
    private string searchString1 = "";
    private bool isLoading = false;

    private string urlSearchTrip = "http://localhost:49922/api/Trips/serchtrip";


    private List<search_tripdetail> search_tripdetail = new List<search_tripdetail>();
    private List<search_tripdetail> tripForm1 = new List<search_tripdetail>();
    private List<search_tripdetail> tripForm2 = new List<search_tripdetail>();
    private string locationFrom;
    private string locationTo;
    private string dateStartRaw;
    private string dateReturnRaw;
    private string isReturnRaw;
    private string Mess;

    private search_trip searchRequest = new search_trip();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            var uri = navigationManager.Uri;
            var uriQuery = new Uri(uri).Query;

            var queryParams = System.Web.HttpUtility.ParseQueryString(uriQuery);

            locationFrom = queryParams["locationFrom"];
            locationTo = queryParams["locationTo"];
            dateStartRaw = queryParams["dateStart"];
            dateReturnRaw = queryParams["dateReturn"];
            isReturnRaw = queryParams["isReturn"];

            DateTime? parsedDateStart = DateTime.TryParse(dateStartRaw, out var parsedStart) ? parsedStart : null;
            DateTime? parsedDateReturn = DateTime.TryParse(dateReturnRaw, out var parsedReturn) ? parsedReturn : null;

            bool? parsedIsReturn = bool.TryParse(isReturnRaw, out var parsedBool) ? parsedBool : null;

            var searchRequest = new search_trip
                {
                    location_from = locationFrom,
                    location_to = locationTo,
                    date_start = parsedDateStart ?? DateTime.Now,
                    date_return = parsedDateReturn,
                    is_return = parsedIsReturn ?? false
                };

            search_tripdetail = new List<search_tripdetail>();

            await LoadTripData(searchRequest);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error initializing component: {ex.Message}");
        }
    }

    private async Task LoadTripData(search_trip searchRequest)
    {
        try
        {
            isLoading = true;
            var response = await httpClient.PostAsJsonAsync(urlSearchTrip, searchRequest);

            if (response.IsSuccessStatusCode)
            {
                var jsonString = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Response JSON: {jsonString}");

                var tripDetails = await response.Content.ReadFromJsonAsync<List<search_tripdetail>>();

                if (tripDetails != null && tripDetails.Any())
                {
                    search_tripdetail = tripDetails;

                    DateTime? parsedDateStart = searchRequest.date_start;
                    DateTime? parsedDateReturn = searchRequest.date_return;

                    // Kiểm tra nếu date_start là ngày hôm nay và điều chỉnh thời gian bắt đầu
                    if (parsedDateStart.HasValue && parsedDateStart.Value.Date == DateTime.Today)
                    {
                        parsedDateStart = DateTime.Now.AddHours(4);
                    }

                    if (parsedDateReturn.HasValue && parsedDateReturn.Value.Date == DateTime.Today)
                    {
                        parsedDateReturn = DateTime.Now.AddHours(4);
                    }

                    if (parsedDateReturn.HasValue && isReturnRaw == "True")
                    {
                        tripForm1 = tripDetails
                            .Where(t => t.time_start >= parsedDateStart && t.time_start < parsedDateReturn)
                            .ToList();
                        tripForm2 = tripDetails
                            .Where(t => t.time_start >= parsedDateReturn)
                            .ToList();

                        if (!tripForm1.Any())
                        {
                            Console.WriteLine("Không tìm thấy chuyến đi nào phù hợp với yêu cầu.");
                            Mess = "Không có chuyến đi phù hợp với yêu cầu. Vui lòng chọn lại!";
                        }

                        if (!tripForm2.Any())
                        {
                            Console.WriteLine("Không tìm thấy chuyến về nào phù hợp với yêu cầu.");
                            Mess = "Không có chuyến về phù hợp với yêu cầu. Vui lòng chọn lại!";
                        }
                    }
                    else
                    {
                        tripForm1 = tripDetails
                            .Where(t => t.time_start >= parsedDateStart)
                            .ToList();
                        tripForm2 = new List<search_tripdetail>();

                        if (!tripForm1.Any())
                        {
                            Console.WriteLine("Không tìm thấy chuyến đi nào phù hợp với yêu cầu.");
                            Mess = "Không có chuyến đi phù hợp với yêu cầu. Vui lòng chọn lại!";
                        }
                    }
                }
                else
                {
                    Console.WriteLine("Không tìm thấy dữ liệu chuyến đi.");
                    Mess = "Không có chuyến đi phù hợp với yêu cầu. Vui lòng chọn lại!";
                }
            }
            else
            {
                Console.WriteLine($"API Error: {response.StatusCode} - {response.ReasonPhrase}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading trips: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }


    private string GetTimeDifference(DateTime startTime, DateTime endTime)
    {
        var diff = endTime - startTime;
        return $"{diff.Hours} giờ {diff.Minutes} phút";
    }

    private List<string> LocationFroms = new()
    {
    "An Giang", "Bà Rịa - Vũng Tàu", "Bắc Giang", "Bắc Kạn",
    "Bạc Liêu", "Bắc Ninh", "Bến Tre", "Bình Dương",
    "Bình Định", "Bình Phước", "Bình Thuận", "Cà Mau",
    "Cần Thơ", "Cao Bằng", "Đà Nẵng", "Đắk Lắk",
    "Đắk Nông", "Điện Biên", "Đồng Nai", "Đồng Tháp",
    "Gia Lai", "Hà Giang", "Hà Nam", "Hà Nội",
    "Hà Tĩnh", "Hải Dương", "Hải Phòng", "Hậu Giang",
    "Hòa Bình", "Hưng Yên", "Khánh Hòa", "Kiên Giang",
    "Kon Tum", "Lai Châu", "Lâm Đồng", "Lạng Sơn",
    "Lào Cai", "Long An", "Nam Định", "Nghệ An",
    "Ninh Bình", "Ninh Thuận", "Phú Thọ", "Phú Yên",
    "Quảng Bình", "Quảng Nam", "Quảng Ngãi", "Quảng Ninh",
    "Quảng Trị", "Sóc Trăng", "Sơn La", "Tây Ninh",
    "Thái Bình", "Thái Nguyên", "Thanh Hóa", "Thừa Thiên Huế",
    "Tiền Giang", "TP. Hồ Chí Minh", "Trà Vinh", "Tuyên Quang",
    "Vĩnh Long", "Vĩnh Phúc", "Yên Bái"
};


    private List<string> LocationTos = new()
    {
    "An Giang", "Bà Rịa - Vũng Tàu", "Bắc Giang", "Bắc Kạn",
    "Bạc Liêu", "Bắc Ninh", "Bến Tre", "Bình Dương",
    "Bình Định", "Bình Phước", "Bình Thuận", "Cà Mau",
    "Cần Thơ", "Cao Bằng", "Đà Nẵng", "Đắk Lắk",
    "Đắk Nông", "Điện Biên", "Đồng Nai", "Đồng Tháp",
    "Gia Lai", "Hà Giang", "Hà Nam", "Hà Nội",
    "Hà Tĩnh", "Hải Dương", "Hải Phòng", "Hậu Giang",
    "Hòa Bình", "Hưng Yên", "Khánh Hòa", "Kiên Giang",
    "Kon Tum", "Lai Châu", "Lâm Đồng", "Lạng Sơn",
    "Lào Cai", "Long An", "Nam Định", "Nghệ An",
    "Ninh Bình", "Ninh Thuận", "Phú Thọ", "Phú Yên",
    "Quảng Bình", "Quảng Nam", "Quảng Ngãi", "Quảng Ninh",
    "Quảng Trị", "Sóc Trăng", "Sơn La", "Tây Ninh",
    "Thái Bình", "Thái Nguyên", "Thanh Hóa", "Thừa Thiên Huế",
    "Tiền Giang", "TP. Hồ Chí Minh", "Trà Vinh", "Tuyên Quang",
    "Vĩnh Long", "Vĩnh Phúc", "Yên Bái"
};

    private async Task SearchTrip()
    {
        var locationFrom = searchRequest.location_from;
        var locationTo = searchRequest.location_to;
        var dateStart = searchRequest.date_start;
        var dateReturn = searchRequest.date_return;
        var isReturn = searchRequest.is_return;

        var formattedDateStart = dateStart?.ToString("yyyy-MM-ddTHH:mm:ss.fffZ");
        var formattedDateReturn = dateReturn?.ToString("yyyy-MM-ddTHH:mm:ss.fffZ");

        Console.WriteLine(locationFrom + locationTo + formattedDateStart + formattedDateReturn + isReturn);


        if (formattedDateReturn == null && !isReturn)
        {
            var url = $"/getTrip?locationFrom={Uri.EscapeDataString(locationFrom)}&locationTo={Uri.EscapeDataString(locationTo)}&dateStart={Uri.EscapeDataString(formattedDateStart)}&isReturn={Uri.EscapeDataString(isReturn.ToString())}";
            Console.WriteLine($"Navigating to: {url}");
            navigationManager.NavigateTo(url, forceLoad: true);
        }
        else
        {
            var url = $"/getTrip?locationFrom={Uri.EscapeDataString(locationFrom)}&locationTo={Uri.EscapeDataString(locationTo)}&dateStart={Uri.EscapeDataString(formattedDateStart)}&dateReturn={Uri.EscapeDataString(formattedDateReturn)}&isReturn={Uri.EscapeDataString(isReturn.ToString())}";
            Console.WriteLine($"Navigating to: {url}");
            navigationManager.NavigateTo(url, forceLoad: true);
        }
        StateHasChanged();
    }

    private async Task SaveTripIdTo(int tripIdTo)
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "selectedTripIdTo", tripIdTo.ToString());
            var tripIdReturn = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "selectedTripIdReturn");
            if (string.IsNullOrEmpty(tripIdReturn))
            {
                Snackbar.Add("Bạn đã chọn chuyến đi. Vui lòng chọn chuyến về", Severity.Success);
            }
            else
            {
                navigationManager.NavigateTo($"/getTrip/{tripIdTo}/{tripIdReturn}");
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi khi xử lý chuyến đi: {ex.Message}", Severity.Error);
        }
    }

    private async Task SaveTripIdReturn(int tripIdReturn)
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "selectedTripIdReturn", tripIdReturn.ToString());
            var tripIdTo = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "selectedTripIdTo");

            if (string.IsNullOrEmpty(tripIdTo))
            {
                Snackbar.Add("Bạn đã chọn chuyến về. Vui lòng chọn chuyến đi", Severity.Success);
            }
            else
            {
                navigationManager.NavigateTo($"/getTrip/{tripIdTo}/{tripIdReturn}");
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi khi xử lý chuyến về: {ex.Message}", Severity.Error);
        }
    }

    private Task<IEnumerable<string>> SearchLocationAsync(string searchText)
    {
        IEnumerable<string> result;

        if (string.IsNullOrWhiteSpace(searchText))
        {
            // Trả về danh sách trống khi không nhập gì
            result = Enumerable.Empty<string>();
        }
        else
        {
            // Lọc dữ liệu dựa trên từ khóa
            result = LocationFroms
                .Where(x => x.Contains(searchText, StringComparison.InvariantCultureIgnoreCase))
                .ToList();
        }

        return Task.FromResult(result);
    }
    private Task<IEnumerable<string>> SearchLocationToAsync(string searchText)
    {
        IEnumerable<string> result;

        if (string.IsNullOrWhiteSpace(searchText))
        {
            // Trả về danh sách trống khi không nhập gì
            result = Enumerable.Empty<string>();
        }
        else
        {
            // Lọc dữ liệu dựa trên từ khóa
            result = LocationTos
                .Where(x => x.Contains(searchText, StringComparison.InvariantCultureIgnoreCase))
                .ToList();
        }

        return Task.FromResult(result);
    }

    public class SearchRequest
    {
        public string location_from { get; set; }
        public string location_to { get; set; }
    }
}
