@page "/getTrip"
@using System.Net.Http.Json
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<div class="container">
    <MudItem xs="12" Class="mx-auto mt-10">
        <MudCard Class="w-100">
            <MudText Class="text-center text-uppercase fw-bold pt-3" Typo="Typo.h5" Color="Color.Primary">Tra cứu chuyến xe</MudText>

            <MudCardContent Class="pt-0">
                <MudRadioGroup @bind-Value="Dense_Radio" Class="pb-5">
                    <MudRadio Value="true" Color="Color.Primary" Size="Size.Small" Dense="false">Một Chiều</MudRadio>
                    <MudRadio Value="false" Color="Color.Primary" Size="Size.Small" Dense="false">Khứ Hồi</MudRadio>
                </MudRadioGroup>
                <MudGrid>
                    <MudItem xs="3">
                        <MudStack>
                            @*    <MudSelect @bind-Value="dropDown.id" Variant="Variant.Outlined" Margin="Margin.None" Dense="false"
                                       ReadOnly="false" Placeholder="Chọn Điểm Đi"
                                       HelperTextOnFocus="true" Clearable="true" Label="Điểm Đi">
                                @foreach (var item in tripFrom)
                                {
                                    <MudSelectItem Value="@item.id">@item.name</MudSelectItem>
                                }
                            </MudSelect> *@
                        </MudStack>
                    </MudItem>
                    <MudItem xs="3">
                        <MudStack>
                            @*   <MudSelect @bind-Value="dropDown.id" Variant="Variant.Outlined" Margin="Margin.None" Dense="false"
                                       ReadOnly="false" Placeholder="Chọn Điểm Đi"
                                       HelperText="@(_helperText ? "Helper Text" : null)"
                                       HelperTextOnFocus="_helperTextOnFocus" Clearable="true" Label="Điểm Đến">
                                @foreach (var item in tripTo)
                                {
                                    <MudSelectItem Value="@item.id">@item.name</MudSelectItem>
                                }
                            </MudSelect> *@
                        </MudStack>
                    </MudItem>
                    <MudItem xs="3">
                        <MudStack>
                            <MudDatePicker Label="Ngày đi" Variant="Variant.Outlined" @bind-Date="_date" ShowToolbar="false" />
                        </MudStack>
                    </MudItem>
                    <MudItem xs="3">
                        <MudStack>
                            <MudDatePicker Label="Ngày về" Variant="Variant.Outlined" @bind-Date="_date" ShowToolbar="false" />
                        </MudStack>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
                <MudButton Class="mx-auto mb-4 mt-0" Variant="Variant.Outlined" Size="Size.Large" IconClass="@Icons.Material.Outlined.Search" Color="Color.Primary">Tìm kiếm chuyến xe</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>

    <MudGrid Class="pa-0 mt-10">
        @if (search_tripdetail != null && search_tripdetail.Any())
        {
            @foreach (var trip in search_tripdetail)
            {
                <MudItem xs="10">
                    <MudCard Outlined="true">
                        <MudCardContent>
                            <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                                <MudTabPanel Text="Lịch trình">
                                    <MudPaper Elevation="1" Class="pa-10 mb-10">
                                        <MudGrid>
                                            <MudItem xs="4">
                                                <MudText Typo="Typo.h6" Class="me-2">
                                                    @trip.time_start.ToString("HH:mm")
                                                    <MudIcon Icon="@Icons.Material.Filled.FiberManualRecord" Size="Size.Medium" Color="Color.Primary" Class="me-2" />
                                                </MudText>
                                            </MudItem>

                                            <MudItem xs="2">
                                                <MudText Typo="Typo.subtitle1" Class="me-2 text-center">
                                                    @GetTimeDifference(@trip.time_start, @trip.time_end)
                                                </MudText>
                                            </MudItem>


                                            <MudItem xs="4">
                                                <MudText Typo="Typo.h6" Class="me-2" Align="Align.End">
                                                    <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Medium" Color="Color.Secondary" Class="me-2" />
                                                    @trip.time_end.ToString("HH:mm")
                                                </MudText>
                                            </MudItem>

                                            <MudItem xs="2">
                                                <MudText Typo="Typo.h6" Color="Color.Error" Class="fw-bold" Align="Align.End">@trip.price</MudText>
                                            </MudItem>
                                        </MudGrid>
                                        <MudGrid>
                                            <MudItem xs="4">
                                                <MudText Typo="Typo.h6" Class="fw-bold">@trip.from</MudText>
                                            </MudItem>

                                            <MudItem xs="2">
                                                <MudText Typo="Typo.body2" Class="text-muted text-center">(UTC+07:00) Hanoi</MudText>
                                            </MudItem>

                                            <MudItem xs="4">
                                                <MudText Typo="Typo.h6" Class="fw-bold" Align="Align.End">@trip.to</MudText>
                                            </MudItem> 
                                            <MudItem xs="2">
                                                <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" Href="@($"/getTrip/{trip.trip_id}")">
                                                    Đặt vé
                                                </MudButton>
                                            </MudItem>
                                        </MudGrid>

                                    </MudPaper>

                                    <MudTimeline TimelineAlign="TimelineAlign.Start">
                                        <MudTimelineItem Color="Color.Secondary" Elevation="25">
                                            <ItemOpposite>
                                                <MudText Color="Color.Secondary" Typo="Typo.h6"> @trip.time_start.ToString("dd/MM/yyyy HH:mm")</MudText>
                                            </ItemOpposite>
                                            <ItemContent>
                                                <MudPaper Elevation="0" Class="mt-n1">
                                                    <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@trip.location_from</MudText>
                                                    <MudText Typo="Typo.body2">@trip.from</MudText>
                                                </MudPaper>
                                            </ItemContent>
                                        </MudTimelineItem>
                                        <MudTimelineItem Color="Color.Secondary" Elevation="25">
                                            <ItemOpposite>
                                                <MudText Color="Color.Secondary" Typo="Typo.h6"> @trip.time_end.ToString("dd/MM/yyyy HH:mm")</MudText>
                                            </ItemOpposite>
                                            <ItemContent>
                                                <MudPaper Elevation="0" Class="mt-n1">
                                                    <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@trip.location_to</MudText>
                                                    <MudText Typo="Typo.body2">@trip.to</MudText>
                                                </MudPaper>
                                            </ItemContent>
                                        </MudTimelineItem>


                                    </MudTimeline>
                                </MudTabPanel>
                                <MudTabPanel Text="Chính sách">
                                    <MudText>Chính sách</MudText>
                                </MudTabPanel>
                            </MudTabs>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        }
        else
        {
            <MudText Typo="Typo.h6" Class="me-2">
                Không có tuyến xe
            </MudText>
        }
    </MudGrid>
</div>

@code {
    Margin _margin;
    bool _dense;
    bool _readonly;
    bool _placeholder;
    bool _helperText;
    bool _helperTextOnFocus;
    bool _clearable;
    private dropdown dropDown = new dropdown();
    private DateTime? _date = DateTime.Today;
    public bool Dense_Radio { get; set; } = true;
    private List<trip> Trips = new List<trip>();
    private string searchString1 = "";
    private bool isLoading = false;

    private string urlSearchTrip = "http://localhost:49922/api/Trips/serchtrip";


    private List<search_tripdetail> search_tripdetail = new List<search_tripdetail>();
    private string locationFrom;
    private string locationTo;
    private string dateStart;

    protected override async Task OnInitializedAsync()
    {
        // Parse URL query parameters
        var uri = navigationManager.Uri;
        var uriQuery = new Uri(uri).Query;

        var queryParams = System.Web.HttpUtility.ParseQueryString(uriQuery);

        locationFrom = queryParams["locationFrom"];
        locationTo = queryParams["locationTo"];
        dateStart = queryParams["dateStart"];

        if (string.IsNullOrWhiteSpace(locationFrom) || string.IsNullOrWhiteSpace(locationTo) || string.IsNullOrWhiteSpace(dateStart))
        {
            Console.WriteLine("Thiếu thông tin cần thiết trong URL.");
            search_tripdetail = new List<search_tripdetail>();
            return;
        }

        var searchRequest = new search_trip
            {
                location_from = locationFrom,
                location_to = locationTo,
                date_start = DateTime.TryParse(dateStart, out var parsedDate) ? parsedDate : DateTime.Now
            };

        await LoadTripData(searchRequest);
    }

    private async Task LoadTripData(search_trip searchRequest)
    {
        try
        {
            isLoading = true;
            var response = await httpClient.PostAsJsonAsync(urlSearchTrip, searchRequest);

            if (response.IsSuccessStatusCode)
            {
                var jsonString = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Response JSON: {jsonString}");

                var tripDetails = await response.Content.ReadFromJsonAsync<List<search_tripdetail>>();

                if (tripDetails != null && tripDetails.Any())
                {
                    search_tripdetail = tripDetails;
                }
            }
            else
            {
                Console.WriteLine($"API Error: {response.StatusCode} - {response.ReasonPhrase}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading trips: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
    private string GetTimeDifference(DateTime timeStart, DateTime timeEnd)
    {
        var timeDifference = timeEnd - timeStart;  
        return timeDifference.ToString(@"hh\:mm");
    }
}
