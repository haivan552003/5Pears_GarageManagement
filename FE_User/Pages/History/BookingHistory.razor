@page "/booking_history"
@inject HttpClient httpClient
@inject IDialogService DialogService
@inject IJSRuntime js
<MudContainer Class="mt-14 pa-0 fs-18" MaxWidth="MaxWidth.False">
    <MudGrid Class="pa-0">
        <NavProfileUser />

        <MudItem xs="9">
            <MudGrid Class="pa-0">
                <MudItem xs="12">
                    <MudPaper Elevation="0" Class="mb-3" Style="@($"color:{Colors.Grey.Darken4}; background:{Colors.Grey.Lighten4};")">
                    </MudPaper>
                    <MudPaper Elevation="0">
                        <MudDataGrid Items="@_guestCarDriverHistories"
                                     Dense="true"
                                     Hover="true"
                                     Bordered="true"
                                     Striped="true"
                                     MultiSelection="false">

                            <ToolBarContent>
                                <MudItem xs="4" Class="pb-3">
                                    <MudTextField @bind-Value="_searchString"
                                                  Placeholder="Tìm kiếm..."
                                                  Adornment="Adornment.Start"
                                                  AdornmentIcon="@Icons.Material.Filled.Search"
                                                  Immediate="true" />
                                </MudItem>
                            </ToolBarContent>

                            <Columns>
                                <PropertyColumn Property="x => x.Price" Title="Giá tiền" />
                                <PropertyColumn Property="x => x.car_code" Title="Mã xe" />
                                <PropertyColumn Property="x => x.guest_trip_code" Title="Mã hóa đơn" />
                                <PropertyColumn Property="x => x.car_name" Title="Tên xe" />
                                <PropertyColumn Property="x => x.car_number" Title="Biển số xe" />
                                <PropertyColumn Property="x => x.fullname" Title="Tên tài xế" />    
                                    <PropertyColumn Property="x => x.driver_code" Title="Mã tài xế" />
                                <TemplateColumn Title="Hành động">
                                    <CellTemplate>                                      
                                        @if (context.Item.status == 2 || context.Item.status == 5)
                                        {
                                            <MudIconButton Icon="@Icons.Material.Filled.Payment" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" />
                                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                                           Variant="Variant.Filled"
                                                           Color="Color.Error"
                                                           Size="Size.Small"
                                                           OnClick="@(() => OpenDeleteDialog(context.Item))" />
                                        }
                                        else 
                                        {
                                            <MudText Typo="Typo.subtitle1">Đã thanh toán</MudText>
                                        }
                                    </CellTemplate>
                                </TemplateColumn>
                            </Columns>

                            <PagerContent>
                                <MudDataGridPager />
                            </PagerContent>
                        </MudDataGrid>
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
</MudContainer>
<script>
    // Lấy token từ localStorage
    function getAuthToken() {
        return localStorage.getItem("authToken");
    }

</script>
@code {
    private List<GuestTripHistory> _guestCarDriverHistories = new();
    private string _searchString = "";
    private int _currentUserId = 1; // Lấy từ authentication
    [Parameter] public int id_cus { get; set; }

    private string _historyUrl = "http://localhost:49922/api/Rate/GetCustomerGuestTripHistory";

    protected override async Task OnInitializedAsync()
    {
        var token = await js.InvokeAsync<string>("localStorage.getItem", "authToken");

        if (!string.IsNullOrEmpty(token))
        {
            var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
            var jwtToken = handler.ReadJwtToken(token);

            var usernameClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "id");

            if (usernameClaim != null)
            {
                id_cus = Convert.ToInt16(usernameClaim.Value);
            }
        }
        await LoadGuestCarDriverHistory();
    }

    private async Task LoadGuestCarDriverHistory()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<List<GuestTripHistory>>($"{_historyUrl}/{id_cus}");
            _guestCarDriverHistories = response ?? new List<GuestTripHistory>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi tải lịch sử: {ex.Message}");
        }
    }
    private async Task OpenDeleteDialog(GuestTripHistory selectedItem)
    {
        var parameters = new DialogParameters
 {
     { "ItemId", selectedItem.id },
     { "DeleteUrl", "http://localhost:49922/api/Rate/Status6_gt" }
 };

        var dialog = await DialogService.ShowAsync<DeleteDialog>("Xác nhận xóa", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            await LoadGuestCarDriverHistory();
        }
    }
}