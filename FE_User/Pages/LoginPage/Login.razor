@page "/login"
@inject HttpClient Http
@inject IJSRuntime js
@inject NavigationManager NavigationManager
@layout EmptyLayout

<MudContainer Class="mt-16 pa-0" MaxWidth="MaxWidth.False">
    <MudGrid Class="pa-0">
        <MudItem xs="3" Class="mx-auto">
            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <MudGrid>
                    <MudItem xs="12">
                        <MudCard>
                            <MudText Typo="Typo.h4" Color="Color.Primary" Class="fw-bold text-center pt-5">BOXCARS</MudText>
                            <MudCardContent>
                                <MudTextField Label="Email" Class="mt-3"
                                              Variant="Variant.Outlined"
                                              Placeholder="Email"
                                              @bind-Value="model.email" For="@(() => model.email)" />
                                <MudTextField Label="Mật khẩu" Class="mt-3"
                                              Variant="Variant.Outlined"
                                              Placeholder="Mật khẩu"
                                              @bind-Value="model.password" For="@(() => model.password)" InputType="InputType.Password" />

                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mx-auto w-100 mt-7">Đăng nhập</MudButton>
                                <MudText Class="mt-2 mb-2 text-center" Typo="Typo.subtitle2" Color="Color.Default">hoặc</MudText>
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Default" StartIcon="@Icons.Custom.Brands.Google" IconColor="Color.Secondary" Class="mx-auto w-100">
                                    Google
                                </MudButton>
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Default" StartIcon="@Icons.Material.Filled.PhoneAndroid" IconColor="Color.Secondary" Class="mx-auto w-100 mt-1" Href="/login_phone">
                                    Đăng nhập bằng SĐT
                                </MudButton>
                                <MudGrid Class="mt-3 mb-5">
                                    <MudItem xs="3" Class="text-center pa-0">
                                        <MudLink Href="/" Underline="Underline.None">Trang chủ</MudLink>
                                    </MudItem>
                                    <MudItem xs="1" Class="pa-0">
                                        <MudText Color="Color.Default" Class="text-center">|</MudText>
                                    </MudItem>
                                    <MudItem xs="3" Class="text-center pa-0">
                                        <MudLink Href="/register" Underline="Underline.None">Đăng ký</MudLink>
                                    </MudItem>
                                    <MudItem xs="1" Class="pa-0">
                                        <MudText Color="Color.Default" Class="text-center">|</MudText>
                                    </MudItem>
                                    <MudItem xs="4" Class="text-center pa-0">
                                        <MudLink Href="/register" Underline="Underline.None">Quên mật khẩu</MudLink>
                                    </MudItem>
                                </MudGrid>

                            </MudCardContent>
                            @if (LoginFailed)
                            {
                                <MudAlert Severity="Severity.Error" Class="mt-2">Đăng nhập thất bại. Vui lòng kiểm tra lại thông tin.</MudAlert>
                            }
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    login model = new login();
    bool LoginFailed;

    private async Task OnValidSubmit(EditContext context)
    {
        try
        {
            var response = await Http.PostAsJsonAsync("http://localhost:49922/api/Login/gentoken-user", model);

            if (response.IsSuccessStatusCode)
            {
                var token = await response.Content.ReadAsStringAsync();

                await js.InvokeVoidAsync("localStorage.setItem", "authToken", token);
                StateHasChanged();
                NavigationManager.NavigateTo("/", true);
            }
            else
            {
                LoginFailed = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
            LoginFailed = true;
        }
    }
}
